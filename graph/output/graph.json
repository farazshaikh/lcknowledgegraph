{
  "nodes": [
    {
      "data": {
        "id": "linkedlist_addition",
        "label": "linkedlist_addition"
      }
    },
    {
      "data": {
        "id": "linkedlist",
        "label": "linkedlist"
      }
    },
    {
      "data": {
        "id": "arrays",
        "label": "arrays"
      }
    },
    {
      "data": {
        "id": "data_structures",
        "label": "data_structures"
      }
    },
    {
      "data": {
        "id": "cc",
        "label": "cc"
      }
    },
    {
      "data": {
        "id": "carry",
        "label": "carry"
      }
    },
    {
      "data": {
        "id": "addition",
        "label": "addition"
      }
    },
    {
      "data": {
        "id": "mathematics",
        "label": "mathematics"
      }
    },
    {
      "data": {
        "id": "sliding_window",
        "label": "sliding_window"
      }
    },
    {
      "data": {
        "id": "two_pointers",
        "label": "two_pointers"
      }
    },
    {
      "data": {
        "id": "hashing",
        "label": "hashing"
      }
    },
    {
      "data": {
        "id": "computer_science_basics",
        "label": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "expand_around_center",
        "label": "expand_around_center"
      }
    },
    {
      "data": {
        "id": "strings",
        "label": "strings"
      }
    },
    {
      "data": {
        "id": "dp",
        "label": "dp"
      }
    },
    {
      "data": {
        "id": "algorithm_design",
        "label": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "math_manipulations",
        "label": "math_manipulations"
      }
    },
    {
      "data": {
        "id": "handle_overflow",
        "label": "handle_overflow"
      }
    },
    {
      "data": {
        "id": "computer_arithmetic",
        "label": "computer_arithmetic"
      }
    },
    {
      "data": {
        "id": "string_parsing",
        "label": "string_parsing"
      }
    },
    {
      "data": {
        "id": "edge_cases",
        "label": "edge_cases"
      }
    },
    {
      "data": {
        "id": "two_pointer_approach",
        "label": "two_pointer_approach"
      }
    },
    {
      "data": {
        "id": "sorting",
        "label": "sorting"
      }
    },
    {
      "data": {
        "id": "two_pointer",
        "label": "two_pointer"
      }
    },
    {
      "data": {
        "id": "backtracking",
        "label": "backtracking"
      }
    },
    {
      "data": {
        "id": "phone_keypad_mapping",
        "label": "phone_keypad_mapping"
      }
    },
    {
      "data": {
        "id": "mappings",
        "label": "mappings"
      }
    },
    {
      "data": {
        "id": "fast_slow_pointer",
        "label": "fast_slow_pointer"
      }
    },
    {
      "data": {
        "id": "backtracking_with_constraints",
        "label": "backtracking_with_constraints"
      }
    },
    {
      "data": {
        "id": "linked_list_node_swaps",
        "label": "linked_list_node_swaps"
      }
    },
    {
      "data": {
        "id": "math",
        "label": "math"
      }
    },
    {
      "data": {
        "id": "bit_manipulation",
        "label": "bit_manipulation"
      }
    },
    {
      "data": {
        "id": "permutation_rearrangement",
        "label": "permutation_rearrangement"
      }
    },
    {
      "data": {
        "id": "algorithm_basics",
        "label": "algorithm_basics"
      }
    },
    {
      "data": {
        "id": "binary_search_variant",
        "label": "binary_search_variant"
      }
    },
    {
      "data": {
        "id": "binary_search",
        "label": "binary_search"
      }
    },
    {
      "data": {
        "id": "binary_search_boundaries",
        "label": "binary_search_boundaries"
      }
    },
    {
      "data": {
        "id": "hash_sets_for_row_col_box",
        "label": "hash_sets_for_row_col_box"
      }
    },
    {
      "data": {
        "id": "hash_set",
        "label": "hash_set"
      }
    },
    {
      "data": {
        "id": "string_generation_pattern",
        "label": "string_generation_pattern"
      }
    },
    {
      "data": {
        "id": "backtracking_with_sorted_input",
        "label": "backtracking_with_sorted_input"
      }
    },
    {
      "data": {
        "id": "string_multiplication_simulation",
        "label": "string_multiplication_simulation"
      }
    },
    {
      "data": {
        "id": "swapping",
        "label": "swapping"
      }
    },
    {
      "data": {
        "id": "matrix_transpose",
        "label": "matrix_transpose"
      }
    },
    {
      "data": {
        "id": "matrix",
        "label": "matrix"
      }
    },
    {
      "data": {
        "id": "reverse",
        "label": "reverse"
      }
    },
    {
      "data": {
        "id": "hashing_by_sorted_key_or_char_count",
        "label": "hashing_by_sorted_key_or_char_count"
      }
    },
    {
      "data": {
        "id": "fast_exponentiation",
        "label": "fast_exponentiation"
      }
    },
    {
      "data": {
        "id": "exponentiation",
        "label": "exponentiation"
      }
    },
    {
      "data": {
        "id": "kadanes_algorithm",
        "label": "kadanes_algorithm"
      }
    },
    {
      "data": {
        "id": "simulation_of_boundary_loops",
        "label": "simulation_of_boundary_loops"
      }
    },
    {
      "data": {
        "id": "simulation",
        "label": "simulation"
      }
    },
    {
      "data": {
        "id": "greedy_max_reach",
        "label": "greedy_max_reach"
      }
    },
    {
      "data": {
        "id": "greedy",
        "label": "greedy"
      }
    },
    {
      "data": {
        "id": "merging",
        "label": "merging"
      }
    },
    {
      "data": {
        "id": "intervals",
        "label": "intervals"
      }
    },
    {
      "data": {
        "id": "combinatorics",
        "label": "combinatorics"
      }
    },
    {
      "data": {
        "id": "dp_with_obstacle_handling",
        "label": "dp_with_obstacle_handling"
      }
    },
    {
      "data": {
        "id": "stack_for_directories",
        "label": "stack_for_directories"
      }
    },
    {
      "data": {
        "id": "stack",
        "label": "stack"
      }
    },
    {
      "data": {
        "id": "dp_for_string_transformations",
        "label": "dp_for_string_transformations"
      }
    },
    {
      "data": {
        "id": "matrix_marking_approach",
        "label": "matrix_marking_approach"
      }
    },
    {
      "data": {
        "id": "dutch_national_flag_algorithm",
        "label": "dutch_national_flag_algorithm"
      }
    },
    {
      "data": {
        "id": "bitmask",
        "label": "bitmask"
      }
    },
    {
      "data": {
        "id": "dfs_backtracking_on_board",
        "label": "dfs_backtracking_on_board"
      }
    },
    {
      "data": {
        "id": "dfs",
        "label": "dfs"
      }
    },
    {
      "data": {
        "id": "array_manipulation",
        "label": "array_manipulation"
      }
    },
    {
      "data": {
        "id": "pointer_approach",
        "label": "pointer_approach"
      }
    },
    {
      "data": {
        "id": "programming_basics",
        "label": "programming_basics"
      }
    },
    {
      "data": {
        "id": "segment_validation",
        "label": "segment_validation"
      }
    },
    {
      "data": {
        "id": "recursion_with_range_bounds",
        "label": "recursion_with_range_bounds"
      }
    },
    {
      "data": {
        "id": "recursion",
        "label": "recursion"
      }
    },
    {
      "data": {
        "id": "bfs_by_levels",
        "label": "bfs_by_levels"
      }
    },
    {
      "data": {
        "id": "bfs",
        "label": "bfs"
      }
    },
    {
      "data": {
        "id": "bfs_with_direction_toggle",
        "label": "bfs_with_direction_toggle"
      }
    },
    {
      "data": {
        "id": "tree_construction_with_index_lookups",
        "label": "tree_construction_with_index_lookups"
      }
    },
    {
      "data": {
        "id": "tree",
        "label": "tree"
      }
    },
    {
      "data": {
        "id": "dfs_path_building",
        "label": "dfs_path_building"
      }
    },
    {
      "data": {
        "id": "pointer_re_linking",
        "label": "pointer_re_linking"
      }
    },
    {
      "data": {
        "id": "tree_bfs",
        "label": "tree_bfs"
      }
    },
    {
      "data": {
        "id": "perfect_tree_recursion",
        "label": "perfect_tree_recursion"
      }
    },
    {
      "data": {
        "id": "set",
        "label": "set"
      }
    },
    {
      "data": {
        "id": "union_find",
        "label": "union_find"
      }
    },
    {
      "data": {
        "id": "dfs_building_integer",
        "label": "dfs_building_integer"
      }
    },
    {
      "data": {
        "id": "palindrome_check",
        "label": "palindrome_check"
      }
    },
    {
      "data": {
        "id": "graph_bfs_dfs_cloning",
        "label": "graph_bfs_dfs_cloning"
      }
    },
    {
      "data": {
        "id": "graph",
        "label": "graph"
      }
    },
    {
      "data": {
        "id": "linked_list_mapping",
        "label": "linked_list_mapping"
      }
    },
    {
      "data": {
        "id": "weaving",
        "label": "weaving"
      }
    },
    {
      "data": {
        "id": "dp_substring_checks",
        "label": "dp_substring_checks"
      }
    },
    {
      "data": {
        "id": "design_with_doubly_linked_list",
        "label": "design_with_doubly_linked_list"
      }
    },
    {
      "data": {
        "id": "hash",
        "label": "hash"
      }
    },
    {
      "data": {
        "id": "hashmap",
        "label": "hashmap"
      }
    },
    {
      "data": {
        "id": "stack_for_rpn",
        "label": "stack_for_rpn"
      }
    },
    {
      "data": {
        "id": "dp_tracking_min_max_up_to_current",
        "label": "dp_tracking_min_max_up_to_current"
      }
    },
    {
      "data": {
        "id": "binary_search_pivot",
        "label": "binary_search_pivot"
      }
    },
    {
      "data": {
        "id": "string_manipulation",
        "label": "string_manipulation"
      }
    },
    {
      "data": {
        "id": "linear_check",
        "label": "linear_check"
      }
    },
    {
      "data": {
        "id": "two_pointer_in_sorted_array",
        "label": "two_pointer_in_sorted_array"
      }
    },
    {
      "data": {
        "id": "inorder_stack_approach",
        "label": "inorder_stack_approach"
      }
    },
    {
      "data": {
        "id": "reverse_array",
        "label": "reverse_array"
      }
    },
    {
      "data": {
        "id": "auxiliary_array",
        "label": "auxiliary_array"
      }
    },
    {
      "data": {
        "id": "dp_on_linear_houses",
        "label": "dp_on_linear_houses"
      }
    },
    {
      "data": {
        "id": "dfs_with_right_first",
        "label": "dfs_with_right_first"
      }
    },
    {
      "data": {
        "id": "dfs_bfs_on_grid",
        "label": "dfs_bfs_on_grid"
      }
    },
    {
      "data": {
        "id": "graph_cycle_detection",
        "label": "graph_cycle_detection"
      }
    },
    {
      "data": {
        "id": "topological_sort",
        "label": "topological_sort"
      }
    },
    {
      "data": {
        "id": "sliding_window_and_subarray_sum",
        "label": "sliding_window_and_subarray_sum"
      }
    },
    {
      "data": {
        "id": "subarray_sum",
        "label": "subarray_sum"
      }
    },
    {
      "data": {
        "id": "heap",
        "label": "heap"
      }
    },
    {
      "data": {
        "id": "quickselect",
        "label": "quickselect"
      }
    },
    {
      "data": {
        "id": "selection",
        "label": "selection"
      }
    },
    {
      "data": {
        "id": "direct_parse",
        "label": "direct_parse"
      }
    },
    {
      "data": {
        "id": "bst_property_compare_values",
        "label": "bst_property_compare_values"
      }
    },
    {
      "data": {
        "id": "tree_recursion",
        "label": "tree_recursion"
      }
    },
    {
      "data": {
        "id": "prefix_suffix_multiplication",
        "label": "prefix_suffix_multiplication"
      }
    },
    {
      "data": {
        "id": "hash_pattern_differences",
        "label": "hash_pattern_differences"
      }
    },
    {
      "data": {
        "id": "min_heap",
        "label": "min_heap"
      }
    },
    {
      "data": {
        "id": "timeline_approach",
        "label": "timeline_approach"
      }
    },
    {
      "data": {
        "id": "timeline",
        "label": "timeline"
      }
    },
    {
      "data": {
        "id": "multi_source_bfs",
        "label": "multi_source_bfs"
      }
    },
    {
      "data": {
        "id": "tree_dfs_for_sum_count",
        "label": "tree_dfs_for_sum_count"
      }
    },
    {
      "data": {
        "id": "bfs_with_column_indices",
        "label": "bfs_with_column_indices"
      }
    },
    {
      "data": {
        "id": "tree_recursion_with_subtree_info",
        "label": "tree_recursion_with_subtree_info"
      }
    },
    {
      "data": {
        "id": "greedy_track_two_smallest",
        "label": "greedy_track_two_smallest"
      }
    },
    {
      "data": {
        "id": "bfs_of_nested_structure",
        "label": "bfs_of_nested_structure"
      }
    },
    {
      "data": {
        "id": "stack_based_flatten",
        "label": "stack_based_flatten"
      }
    },
    {
      "data": {
        "id": "bucket_sort",
        "label": "bucket_sort"
      }
    },
    {
      "data": {
        "id": "rows",
        "label": "rows"
      }
    },
    {
      "data": {
        "id": "cols",
        "label": "cols"
      }
    },
    {
      "data": {
        "id": "diag_counters",
        "label": "diag_counters"
      }
    },
    {
      "data": {
        "id": "binary_searching_by_value",
        "label": "binary_searching_by_value"
      }
    },
    {
      "data": {
        "id": "dynamic_array",
        "label": "dynamic_array"
      }
    },
    {
      "data": {
        "id": "array",
        "label": "array"
      }
    },
    {
      "data": {
        "id": "reservoir_sampling",
        "label": "reservoir_sampling"
      }
    },
    {
      "data": {
        "id": "sampling",
        "label": "sampling"
      }
    },
    {
      "data": {
        "id": "storing_indices",
        "label": "storing_indices"
      }
    },
    {
      "data": {
        "id": "list",
        "label": "list"
      }
    },
    {
      "data": {
        "id": "grid_scanning",
        "label": "grid_scanning"
      }
    },
    {
      "data": {
        "id": "grid",
        "label": "grid"
      }
    },
    {
      "data": {
        "id": "frequency",
        "label": "frequency"
      }
    },
    {
      "data": {
        "id": "two_pointer_in_place",
        "label": "two_pointer_in_place"
      }
    },
    {
      "data": {
        "id": "string_split_and_format_checks",
        "label": "string_split_and_format_checks"
      }
    },
    {
      "data": {
        "id": "dfs_bfs_rolling_approach",
        "label": "dfs_bfs_rolling_approach"
      }
    },
    {
      "data": {
        "id": "subset_sum_dp",
        "label": "subset_sum_dp"
      }
    },
    {
      "data": {
        "id": "simulation_of_diagonals",
        "label": "simulation_of_diagonals"
      }
    },
    {
      "data": {
        "id": "prefix_sum_mod_k",
        "label": "prefix_sum_mod_k"
      }
    },
    {
      "data": {
        "id": "prefix_sum",
        "label": "prefix_sum"
      }
    },
    {
      "data": {
        "id": "prefix_sum_0_neg1_1_pos1",
        "label": "prefix_sum_0_neg1_1_pos1"
      }
    },
    {
      "data": {
        "id": "dfs_bfs_reveal_squares",
        "label": "dfs_bfs_reveal_squares"
      }
    },
    {
      "data": {
        "id": "recursion_with_parentheses_parse",
        "label": "recursion_with_parentheses_parse"
      }
    },
    {
      "data": {
        "id": "tree_traversal_boundary",
        "label": "tree_traversal_boundary"
      }
    },
    {
      "data": {
        "id": "permutation_next_greater_logic",
        "label": "permutation_next_greater_logic"
      }
    },
    {
      "data": {
        "id": "permutation",
        "label": "permutation"
      }
    },
    {
      "data": {
        "id": "stack_of_function_calls",
        "label": "stack_of_function_calls"
      }
    },
    {
      "data": {
        "id": "timestamps",
        "label": "timestamps"
      }
    },
    {
      "data": {
        "id": "greedy_digit_swap_from_left",
        "label": "greedy_digit_swap_from_left"
      }
    },
    {
      "data": {
        "id": "dfs_bfs_in_grid",
        "label": "dfs_bfs_in_grid"
      }
    },
    {
      "data": {
        "id": "dfs_on_email_lists",
        "label": "dfs_on_email_lists"
      }
    },
    {
      "data": {
        "id": "stack_approach",
        "label": "stack_approach"
      }
    },
    {
      "data": {
        "id": "monotonic_stack",
        "label": "monotonic_stack"
      }
    },
    {
      "data": {
        "id": "inorder_traversal_link",
        "label": "inorder_traversal_link"
      }
    },
    {
      "data": {
        "id": "shortest_path_with_limited_stops",
        "label": "shortest_path_with_limited_stops"
      }
    },
    {
      "data": {
        "id": "bellman_ford",
        "label": "bellman_ford"
      }
    },
    {
      "data": {
        "id": "custom_priority_sort",
        "label": "custom_priority_sort"
      }
    },
    {
      "data": {
        "id": "linked_list_insertion_logic",
        "label": "linked_list_insertion_logic"
      }
    },
    {
      "data": {
        "id": "two_pointer_on_age_constraints",
        "label": "two_pointer_on_age_constraints"
      }
    },
    {
      "data": {
        "id": "array_with_front_rear_indices",
        "label": "array_with_front_rear_indices"
      }
    },
    {
      "data": {
        "id": "binary_search_for_peak",
        "label": "binary_search_for_peak"
      }
    },
    {
      "data": {
        "id": "bfs_dfs_from_target_node",
        "label": "bfs_dfs_from_target_node"
      }
    },
    {
      "data": {
        "id": "tree_dfs",
        "label": "tree_dfs"
      }
    },
    {
      "data": {
        "id": "depth_tracking",
        "label": "depth_tracking"
      }
    },
    {
      "data": {
        "id": "prefix_sums",
        "label": "prefix_sums"
      }
    },
    {
      "data": {
        "id": "random_selection",
        "label": "random_selection"
      }
    },
    {
      "data": {
        "id": "probabilistic_methods",
        "label": "probabilistic_methods"
      }
    },
    {
      "data": {
        "id": "balance_counters",
        "label": "balance_counters"
      }
    },
    {
      "data": {
        "id": "prefix_sum_in_0_1_array",
        "label": "prefix_sum_in_0_1_array"
      }
    },
    {
      "data": {
        "id": "bfs_across_islands",
        "label": "bfs_across_islands"
      }
    },
    {
      "data": {
        "id": "bfs_level_order_checking",
        "label": "bfs_level_order_checking"
      }
    },
    {
      "data": {
        "id": "dp_with_intervals",
        "label": "dp_with_intervals"
      }
    },
    {
      "data": {
        "id": "merge_intervals_method",
        "label": "merge_intervals_method"
      }
    },
    {
      "data": {
        "id": "count_zero",
        "label": "count_zero"
      }
    },
    {
      "data": {
        "id": "counting",
        "label": "counting"
      }
    },
    {
      "data": {
        "id": "binary_search_on_capacity",
        "label": "binary_search_on_capacity"
      }
    },
    {
      "data": {
        "id": "binary_search_using_the_missing_counts",
        "label": "binary_search_using_the_missing_counts"
      }
    },
    {
      "data": {
        "id": "bfs_in_8_directions",
        "label": "bfs_in_8_directions"
      }
    },
    {
      "data": {
        "id": "stack_based_count",
        "label": "stack_based_count"
      }
    },
    {
      "data": {
        "id": "scanning_mismatches",
        "label": "scanning_mismatches"
      }
    },
    {
      "data": {
        "id": "scanning",
        "label": "scanning"
      }
    },
    {
      "data": {
        "id": "group_by_i_plus_j_in_a_map",
        "label": "group_by_i_plus_j_in_a_map"
      }
    },
    {
      "data": {
        "id": "maps",
        "label": "maps"
      }
    },
    {
      "data": {
        "id": "dfs_subtrees_with_apple_check",
        "label": "dfs_subtrees_with_apple_check"
      }
    },
    {
      "data": {
        "id": "sparse_representation_iteration",
        "label": "sparse_representation_iteration"
      }
    },
    {
      "data": {
        "id": "sparse_representation",
        "label": "sparse_representation"
      }
    },
    {
      "data": {
        "id": "nodes_have_parent_pointers",
        "label": "nodes_have_parent_pointers"
      }
    },
    {
      "data": {
        "id": "scanning_from_the_right",
        "label": "scanning_from_the_right"
      }
    },
    {
      "data": {
        "id": "interactive_bfs_dfs_concept",
        "label": "interactive_bfs_dfs_concept"
      }
    },
    {
      "data": {
        "id": "two_pointers_on_runs",
        "label": "two_pointers_on_runs"
      }
    },
    {
      "data": {
        "id": "sql_grouping_and_joining",
        "label": "sql_grouping_and_joining"
      }
    },
    {
      "data": {
        "id": "sql",
        "label": "sql"
      }
    },
    {
      "data": {
        "id": "database_fundamentals",
        "label": "database_fundamentals"
      }
    },
    {
      "data": {
        "id": "dp_for_the_fewest_coins",
        "label": "dp_for_the_fewest_coins"
      }
    },
    {
      "data": {
        "id": "linked_list_rearrangement",
        "label": "linked_list_rearrangement"
      }
    },
    {
      "data": {
        "id": "implementation_of_standard_sorts",
        "label": "implementation_of_standard_sorts"
      }
    },
    {
      "data": {
        "id": "math_formula",
        "label": "math_formula"
      }
    },
    {
      "data": {
        "id": "dp_on_string_decoding",
        "label": "dp_on_string_decoding"
      }
    },
    {
      "data": {
        "id": "level_order_bfs_linking",
        "label": "level_order_bfs_linking"
      }
    },
    {
      "data": {
        "id": "check_single_insert_delete_replace",
        "label": "check_single_insert_delete_replace"
      }
    },
    {
      "data": {
        "id": "bst_iteration_with_backtracking",
        "label": "bst_iteration_with_backtracking"
      }
    },
    {
      "data": {
        "id": "dfs_depth",
        "label": "dfs_depth"
      }
    },
    {
      "data": {
        "id": "lca_logic",
        "label": "lca_logic"
      }
    },
    {
      "data": {
        "id": "prefix_sum_map",
        "label": "prefix_sum_map"
      }
    },
    {
      "data": {
        "id": "dp_counting_combos",
        "label": "dp_counting_combos"
      }
    },
    {
      "data": {
        "id": "similar_bfs_with_hidden_adjacency",
        "label": "similar_bfs_with_hidden_adjacency"
      }
    },
    {
      "data": {
        "id": "in_place_pointer_swap",
        "label": "in_place_pointer_swap"
      }
    },
    {
      "data": {
        "id": "pointer",
        "label": "pointer"
      }
    },
    {
      "data": {
        "id": "linked_list_re_linking",
        "label": "linked_list_re_linking"
      }
    },
    {
      "data": {
        "id": "linked_list_skip_duplicates",
        "label": "linked_list_skip_duplicates"
      }
    },
    {
      "data": {
        "id": "custom_sorting_by_string_comparison",
        "label": "custom_sorting_by_string_comparison"
      }
    },
    {
      "data": {
        "id": "greedy_bfs_layering",
        "label": "greedy_bfs_layering"
      }
    },
    {
      "data": {
        "id": "bst_node_manipulation",
        "label": "bst_node_manipulation"
      }
    },
    {
      "data": {
        "id": "greedy_solution",
        "label": "greedy_solution"
      }
    },
    {
      "data": {
        "id": "constraints",
        "label": "constraints"
      }
    },
    {
      "data": {
        "id": "binary_search_on_eating_speed",
        "label": "binary_search_on_eating_speed"
      }
    },
    {
      "data": {
        "id": "inorder_traversal",
        "label": "inorder_traversal"
      }
    },
    {
      "data": {
        "id": "bitmask_prefix_approach",
        "label": "bitmask_prefix_approach"
      }
    },
    {
      "data": {
        "id": "scan_for_segments_matching_global_max",
        "label": "scan_for_segments_matching_global_max"
      }
    },
    {
      "data": {
        "id": "convert_times_to_minutes",
        "label": "convert_times_to_minutes"
      }
    },
    {
      "data": {
        "id": "time_conversion",
        "label": "time_conversion"
      }
    },
    {
      "data": {
        "id": "sort",
        "label": "sort"
      }
    },
    {
      "data": {
        "id": "dp_subset_sum",
        "label": "dp_subset_sum"
      }
    },
    {
      "data": {
        "id": "greedy_for_multiple_transactions",
        "label": "greedy_for_multiple_transactions"
      }
    },
    {
      "data": {
        "id": "iterative_approach",
        "label": "iterative_approach"
      }
    },
    {
      "data": {
        "id": "char_count",
        "label": "char_count"
      }
    },
    {
      "data": {
        "id": "character_count",
        "label": "character_count"
      }
    },
    {
      "data": {
        "id": "simple_prefix_check_among_strings",
        "label": "simple_prefix_check_among_strings"
      }
    },
    {
      "data": {
        "id": "binary_search_with_duplicates",
        "label": "binary_search_with_duplicates"
      }
    },
    {
      "data": {
        "id": "dfs_checking_subpath",
        "label": "dfs_checking_subpath"
      }
    },
    {
      "data": {
        "id": "greedy_with_a_max_heap",
        "label": "greedy_with_a_max_heap"
      }
    },
    {
      "data": {
        "id": "sorting_by_freq",
        "label": "sorting_by_freq"
      }
    },
    {
      "data": {
        "id": "bitwise_ops",
        "label": "bitwise_ops"
      }
    },
    {
      "data": {
        "id": "prefix_sum_remainder_approach",
        "label": "prefix_sum_remainder_approach"
      }
    },
    {
      "data": {
        "id": "catalan_numbers",
        "label": "catalan_numbers"
      }
    },
    {
      "data": {
        "id": "greedy_from_largest_roman_values",
        "label": "greedy_from_largest_roman_values"
      }
    },
    {
      "data": {
        "id": "similar_to_lca_but_confirm_nodes_exist",
        "label": "similar_to_lca_but_confirm_nodes_exist"
      }
    },
    {
      "data": {
        "id": "tree_dfs_cut_approach",
        "label": "tree_dfs_cut_approach"
      }
    },
    {
      "data": {
        "id": "hash_mod_frequencies",
        "label": "hash_mod_frequencies"
      }
    },
    {
      "data": {
        "id": "interval_scheduling",
        "label": "interval_scheduling"
      }
    },
    {
      "data": {
        "id": "floyds_cycle_detection",
        "label": "floyds_cycle_detection"
      }
    },
    {
      "data": {
        "id": "cycle_detection",
        "label": "cycle_detection"
      }
    },
    {
      "data": {
        "id": "prefix_check",
        "label": "prefix_check"
      }
    },
    {
      "data": {
        "id": "recursive_pattern",
        "label": "recursive_pattern"
      }
    },
    {
      "data": {
        "id": "sum_approach_minus_min",
        "label": "sum_approach_minus_min"
      }
    },
    {
      "data": {
        "id": "summation",
        "label": "summation"
      }
    },
    {
      "data": {
        "id": "used_set",
        "label": "used_set"
      }
    },
    {
      "data": {
        "id": "min_max_queue",
        "label": "min_max_queue"
      }
    },
    {
      "data": {
        "id": "queue",
        "label": "queue"
      }
    },
    {
      "data": {
        "id": "distinct_check",
        "label": "distinct_check"
      }
    },
    {
      "data": {
        "id": "distinctness",
        "label": "distinctness"
      }
    },
    {
      "data": {
        "id": "binary_search_for_max_length",
        "label": "binary_search_for_max_length"
      }
    },
    {
      "data": {
        "id": "boyer_moore_for_two_candidates",
        "label": "boyer_moore_for_two_candidates"
      }
    },
    {
      "data": {
        "id": "majority",
        "label": "majority"
      }
    },
    {
      "data": {
        "id": "math_symmetry",
        "label": "math_symmetry"
      }
    },
    {
      "data": {
        "id": "dfs_postorder",
        "label": "dfs_postorder"
      }
    },
    {
      "data": {
        "id": "slow_fast_pointer_find_mid",
        "label": "slow_fast_pointer_find_mid"
      }
    },
    {
      "data": {
        "id": "set_approach_for_squares",
        "label": "set_approach_for_squares"
      }
    },
    {
      "data": {
        "id": "greedy_by_end_time",
        "label": "greedy_by_end_time"
      }
    },
    {
      "data": {
        "id": "pow2_usage",
        "label": "pow2_usage"
      }
    },
    {
      "data": {
        "id": "exponential",
        "label": "exponential"
      }
    },
    {
      "data": {
        "id": "bit_manipulation_counting_bits_mod_3",
        "label": "bit_manipulation_counting_bits_mod_3"
      }
    },
    {
      "data": {
        "id": "mark_intervals_and_merge",
        "label": "mark_intervals_and_merge"
      }
    },
    {
      "data": {
        "id": "start_top_right_corner",
        "label": "start_top_right_corner"
      }
    },
    {
      "data": {
        "id": "move_left_down",
        "label": "move_left_down"
      }
    },
    {
      "data": {
        "id": "check_flips_to_get_alternating_pattern",
        "label": "check_flips_to_get_alternating_pattern"
      }
    },
    {
      "data": {
        "id": "string",
        "label": "string"
      }
    },
    {
      "data": {
        "id": "likely_checking_partial_swaps_or_some_condition",
        "label": "likely_checking_partial_swaps_or_some_condition"
      }
    },
    {
      "data": {
        "id": "tracking_zero_count",
        "label": "tracking_zero_count"
      }
    },
    {
      "data": {
        "id": "simulation_row_by_row",
        "label": "simulation_row_by_row"
      }
    },
    {
      "data": {
        "id": "problem_specific_partial_info",
        "label": "problem_specific_partial_info"
      }
    },
    {
      "data": {
        "id": "domain_specific",
        "label": "domain_specific"
      }
    },
    {
      "data": {
        "id": "design_with_data_structures",
        "label": "design_with_data_structures"
      }
    },
    {
      "data": {
        "id": "software_engineering",
        "label": "software_engineering"
      }
    },
    {
      "data": {
        "id": "bitwise_or",
        "label": "bitwise_or"
      }
    },
    {
      "data": {
        "id": "bst_with_parent_pointer",
        "label": "bst_with_parent_pointer"
      }
    },
    {
      "data": {
        "id": "min_heap_of_seats",
        "label": "min_heap_of_seats"
      }
    },
    {
      "data": {
        "id": "two_pointer_from_ends",
        "label": "two_pointer_from_ends"
      }
    },
    {
      "data": {
        "id": "count",
        "label": "count"
      }
    },
    {
      "data": {
        "id": "sort_desc_frequency",
        "label": "sort_desc_frequency"
      }
    },
    {
      "data": {
        "id": "inorder_flatten",
        "label": "inorder_flatten"
      }
    },
    {
      "data": {
        "id": "build_balanced",
        "label": "build_balanced"
      }
    },
    {
      "data": {
        "id": "simulation_of_collapses",
        "label": "simulation_of_collapses"
      }
    },
    {
      "data": {
        "id": "counting_depth",
        "label": "counting_depth"
      }
    },
    {
      "data": {
        "id": "bfs_level_sums",
        "label": "bfs_level_sums"
      }
    },
    {
      "data": {
        "id": "backtracking_k_combinations",
        "label": "backtracking_k_combinations"
      }
    },
    {
      "data": {
        "id": "subarray_coverage",
        "label": "subarray_coverage"
      }
    },
    {
      "data": {
        "id": "kadanes",
        "label": "kadanes"
      }
    },
    {
      "data": {
        "id": "invert_approach",
        "label": "invert_approach"
      }
    },
    {
      "data": {
        "id": "greedy_track_min_max_open",
        "label": "greedy_track_min_max_open"
      }
    },
    {
      "data": {
        "id": "dfs_from_edges_inward",
        "label": "dfs_from_edges_inward"
      }
    },
    {
      "data": {
        "id": "sql_ranking_or_subquery",
        "label": "sql_ranking_or_subquery"
      }
    },
    {
      "data": {
        "id": "recursion_building_symmetrical_pairs",
        "label": "recursion_building_symmetrical_pairs"
      }
    },
    {
      "data": {
        "id": "sliding_window_and_a_b_c",
        "label": "sliding_window_and_a_b_c"
      }
    },
    {
      "data": {
        "id": "string_building_with_known_indices",
        "label": "string_building_with_known_indices"
      }
    },
    {
      "data": {
        "id": "greedy_sorting_by_cost_difference",
        "label": "greedy_sorting_by_cost_difference"
      }
    },
    {
      "data": {
        "id": "double_dfs_approach",
        "label": "double_dfs_approach"
      }
    },
    {
      "data": {
        "id": "map_freq",
        "label": "map_freq"
      }
    },
    {
      "data": {
        "id": "greedy_alignment_check_of_l_r",
        "label": "greedy_alignment_check_of_l_r"
      }
    },
    {
      "data": {
        "id": "counting_depth_from_t",
        "label": "counting_depth_from_t"
      }
    },
    {
      "data": {
        "id": "divide_and_conquer",
        "label": "divide_and_conquer"
      }
    },
    {
      "data": {
        "id": "string_hashing",
        "label": "string_hashing"
      }
    },
    {
      "data": {
        "id": "suffix_array_approach",
        "label": "suffix_array_approach"
      }
    },
    {
      "data": {
        "id": "suffix_structures",
        "label": "suffix_structures"
      }
    },
    {
      "data": {
        "id": "reservoir_sampling_for_single_item",
        "label": "reservoir_sampling_for_single_item"
      }
    },
    {
      "data": {
        "id": "dp_approach_problem_specific",
        "label": "dp_approach_problem_specific"
      }
    },
    {
      "data": {
        "id": "multiply_device_counts_in_consecutive_non_empty_rows",
        "label": "multiply_device_counts_in_consecutive_non_empty_rows"
      }
    },
    {
      "data": {
        "id": "hardware",
        "label": "hardware"
      }
    },
    {
      "data": {
        "id": "dp_counting_squares",
        "label": "dp_counting_squares"
      }
    },
    {
      "data": {
        "id": "prefix_difference",
        "label": "prefix_difference"
      }
    },
    {
      "data": {
        "id": "circular_array",
        "label": "circular_array"
      }
    },
    {
      "data": {
        "id": "interval_booking_check",
        "label": "interval_booking_check"
      }
    },
    {
      "data": {
        "id": "compare_row_patterns_with_column_patterns",
        "label": "compare_row_patterns_with_column_patterns"
      }
    },
    {
      "data": {
        "id": "bfs_track_max_in_each_level",
        "label": "bfs_track_max_in_each_level"
      }
    },
    {
      "data": {
        "id": "diagonal",
        "label": "diagonal"
      }
    },
    {
      "data": {
        "id": "dp_track_best_ai_plus_i_while_scanning",
        "label": "dp_track_best_ai_plus_i_while_scanning"
      }
    },
    {
      "data": {
        "id": "stack_with_a_min_tracker",
        "label": "stack_with_a_min_tracker"
      }
    },
    {
      "data": {
        "id": "dp_with_steps",
        "label": "dp_with_steps"
      }
    },
    {
      "data": {
        "id": "zero_one_increments",
        "label": "zero_one_increments"
      }
    },
    {
      "data": {
        "id": "greedy_scanning_of_s_to_build_t",
        "label": "greedy_scanning_of_s_to_build_t"
      }
    },
    {
      "data": {
        "id": "bfs_from_leaves_inward",
        "label": "bfs_from_leaves_inward"
      }
    },
    {
      "data": {
        "id": "multi_source_bfs_from_all_zero_cells",
        "label": "multi_source_bfs_from_all_zero_cells"
      }
    },
    {
      "data": {
        "id": "vs_suffix_sums",
        "label": "vs_suffix_sums"
      }
    },
    {
      "data": {
        "id": "track_positions_of_each_character",
        "label": "track_positions_of_each_character"
      }
    },
    {
      "data": {
        "id": "freq_compare",
        "label": "freq_compare"
      }
    },
    {
      "data": {
        "id": "prefix_approach_on_shift_ranges",
        "label": "prefix_approach_on_shift_ranges"
      }
    },
    {
      "data": {
        "id": "dfs_bfs_from_board_edges",
        "label": "dfs_bfs_from_board_edges"
      }
    },
    {
      "data": {
        "id": "counting_distances",
        "label": "counting_distances"
      }
    },
    {
      "data": {
        "id": "dfs_adjacency",
        "label": "dfs_adjacency"
      }
    },
    {
      "data": {
        "id": "check_leading_bits_of_each_byte",
        "label": "check_leading_bits_of_each_byte"
      }
    },
    {
      "data": {
        "id": "bit_representation",
        "label": "bit_representation"
      }
    },
    {
      "data": {
        "id": "keep_smaller_digits",
        "label": "keep_smaller_digits"
      }
    },
    {
      "data": {
        "id": "frequency_requirement_across_b",
        "label": "frequency_requirement_across_b"
      }
    },
    {
      "data": {
        "id": "check_number_of_odd_freq_chars",
        "label": "check_number_of_odd_freq_chars"
      }
    },
    {
      "data": {
        "id": "partial_lock_approach",
        "label": "partial_lock_approach"
      }
    },
    {
      "data": {
        "id": "rolling_hash",
        "label": "rolling_hash"
      }
    },
    {
      "data": {
        "id": "count_consecutive_zero_segments",
        "label": "count_consecutive_zero_segments"
      }
    },
    {
      "data": {
        "id": "set_based",
        "label": "set_based"
      }
    },
    {
      "data": {
        "id": "index_based_counting",
        "label": "index_based_counting"
      }
    },
    {
      "data": {
        "id": "hash_points_by_x_or_y",
        "label": "hash_points_by_x_or_y"
      }
    },
    {
      "data": {
        "id": "geometry",
        "label": "geometry"
      }
    },
    {
      "data": {
        "id": "spiral_fill_with_linked_list",
        "label": "spiral_fill_with_linked_list"
      }
    },
    {
      "data": {
        "id": "likely_sliding_window",
        "label": "likely_sliding_window"
      }
    },
    {
      "data": {
        "id": "choose_subsequences",
        "label": "choose_subsequences"
      }
    },
    {
      "data": {
        "id": "linked_list_partial_reverse",
        "label": "linked_list_partial_reverse"
      }
    },
    {
      "data": {
        "id": "delim",
        "label": "delim"
      }
    },
    {
      "data": {
        "id": "length_prefix_approach",
        "label": "length_prefix_approach"
      }
    },
    {
      "data": {
        "id": "prefix",
        "label": "prefix"
      }
    },
    {
      "data": {
        "id": "unlimited_usage",
        "label": "unlimited_usage"
      }
    },
    {
      "data": {
        "id": "row_col_counting_in_a_grid",
        "label": "row_col_counting_in_a_grid"
      }
    },
    {
      "data": {
        "id": "linked_list_rotate_by_k_steps",
        "label": "linked_list_rotate_by_k_steps"
      }
    },
    {
      "data": {
        "id": "dfs_placing_nodes_in_the_correct_position",
        "label": "dfs_placing_nodes_in_the_correct_position"
      }
    },
    {
      "data": {
        "id": "multi_source_bfs_from_rotten_oranges",
        "label": "multi_source_bfs_from_rotten_oranges"
      }
    },
    {
      "data": {
        "id": "greedy_to_form_complete_pairs",
        "label": "greedy_to_form_complete_pairs"
      }
    },
    {
      "data": {
        "id": "likely_dp",
        "label": "likely_dp"
      }
    },
    {
      "data": {
        "id": "dfs_bfs_with_sum_of_fish",
        "label": "dfs_bfs_with_sum_of_fish"
      }
    },
    {
      "data": {
        "id": "use_points_set_to_find_rectangle_corners",
        "label": "use_points_set_to_find_rectangle_corners"
      }
    },
    {
      "data": {
        "id": "union_find_in_a_tree",
        "label": "union_find_in_a_tree"
      }
    },
    {
      "data": {
        "id": "k_limited_bfs",
        "label": "k_limited_bfs"
      }
    },
    {
      "data": {
        "id": "dfs_track_max_so_far",
        "label": "dfs_track_max_so_far"
      }
    },
    {
      "data": {
        "id": "linked_list_partition_by_x",
        "label": "linked_list_partition_by_x"
      }
    },
    {
      "data": {
        "id": "map_file_contents_list_of_paths",
        "label": "map_file_contents_list_of_paths"
      }
    },
    {
      "data": {
        "id": "map",
        "label": "map"
      }
    },
    {
      "data": {
        "id": "binary_search_on_pairs",
        "label": "binary_search_on_pairs"
      }
    },
    {
      "data": {
        "id": "patience_sorting",
        "label": "patience_sorting"
      }
    },
    {
      "data": {
        "id": "bfs_from_the_entrance",
        "label": "bfs_from_the_entrance"
      }
    },
    {
      "data": {
        "id": "dp_with_two_indices",
        "label": "dp_with_two_indices"
      }
    },
    {
      "data": {
        "id": "hash_product_list_of_pairs",
        "label": "hash_product_list_of_pairs"
      }
    },
    {
      "data": {
        "id": "dp_on_circular_array",
        "label": "dp_on_circular_array"
      }
    },
    {
      "data": {
        "id": "map_of_key_list_of_timestamp_value",
        "label": "map_of_key_list_of_timestamp_value"
      }
    },
    {
      "data": {
        "id": "counting_odd_numbers",
        "label": "counting_odd_numbers"
      }
    },
    {
      "data": {
        "id": "map_digit_sum_top_two_values",
        "label": "map_digit_sum_top_two_values"
      }
    },
    {
      "data": {
        "id": "recursively_with_boundaries",
        "label": "recursively_with_boundaries"
      }
    },
    {
      "data": {
        "id": "reverse_depth_weighting",
        "label": "reverse_depth_weighting"
      }
    },
    {
      "data": {
        "id": "problem_specific_possibly_bfs",
        "label": "problem_specific_possibly_bfs"
      }
    },
    {
      "data": {
        "id": "graph_theory",
        "label": "graph_theory"
      }
    },
    {
      "data": {
        "id": "sql_grouping_or_join",
        "label": "sql_grouping_or_join"
      }
    },
    {
      "data": {
        "id": "keep_prefix_product",
        "label": "keep_prefix_product"
      }
    },
    {
      "data": {
        "id": "prefix_product",
        "label": "prefix_product"
      }
    },
    {
      "data": {
        "id": "handle_zeros",
        "label": "handle_zeros"
      }
    },
    {
      "data": {
        "id": "zero_handling",
        "label": "zero_handling"
      }
    },
    {
      "data": {
        "id": "dfs_from_boundary_to_mark_open_water",
        "label": "dfs_from_boundary_to_mark_open_water"
      }
    },
    {
      "data": {
        "id": "graph_traversal",
        "label": "graph_traversal"
      }
    },
    {
      "data": {
        "id": "frequency_map",
        "label": "frequency_map"
      }
    },
    {
      "data": {
        "id": "elimination",
        "label": "elimination"
      }
    },
    {
      "data": {
        "id": "problem_solving_strategies",
        "label": "problem_solving_strategies"
      }
    },
    {
      "data": {
        "id": "verify",
        "label": "verify"
      }
    },
    {
      "data": {
        "id": "verification",
        "label": "verification"
      }
    },
    {
      "data": {
        "id": "bfs_in_lex_order",
        "label": "bfs_in_lex_order"
      }
    },
    {
      "data": {
        "id": "2d_prefix_sum",
        "label": "2d_prefix_sum"
      }
    },
    {
      "data": {
        "id": "only_multiply_non_zero_elements",
        "label": "only_multiply_non_zero_elements"
      }
    },
    {
      "data": {
        "id": "bfs_for_minimal_steps",
        "label": "bfs_for_minimal_steps"
      }
    },
    {
      "data": {
        "id": "recursive_generation_of_bsts",
        "label": "recursive_generation_of_bsts"
      }
    },
    {
      "data": {
        "id": "graph_2_coloring",
        "label": "graph_2_coloring"
      }
    },
    {
      "data": {
        "id": "allowing_one_zero_flip",
        "label": "allowing_one_zero_flip"
      }
    },
    {
      "data": {
        "id": "tree_dfs_with_path_constraints",
        "label": "tree_dfs_with_path_constraints"
      }
    },
    {
      "data": {
        "id": "dp_tracking_squares",
        "label": "dp_tracking_squares"
      }
    },
    {
      "data": {
        "id": "transform_to_house_robber_on_freq_array",
        "label": "transform_to_house_robber_on_freq_array"
      }
    },
    {
      "data": {
        "id": "greedy_scheduling_based_on_most_frequent_tasks",
        "label": "greedy_scheduling_based_on_most_frequent_tasks"
      }
    },
    {
      "data": {
        "id": "prefix_sum_mod_technique",
        "label": "prefix_sum_mod_technique"
      }
    },
    {
      "data": {
        "id": "problem_specific_possibly_check_deviation_from_mean",
        "label": "problem_specific_possibly_check_deviation_from_mean"
      }
    },
    {
      "data": {
        "id": "statistical_analysis",
        "label": "statistical_analysis"
      }
    },
    {
      "data": {
        "id": "prefix_sum_parity_counting",
        "label": "prefix_sum_parity_counting"
      }
    },
    {
      "data": {
        "id": "sieve_of_eratosthenes",
        "label": "sieve_of_eratosthenes"
      }
    },
    {
      "data": {
        "id": "number_theory",
        "label": "number_theory"
      }
    },
    {
      "data": {
        "id": "generate_n_by_n_spiral",
        "label": "generate_n_by_n_spiral"
      }
    },
    {
      "data": {
        "id": "problem_statement_possibly_direct_formula_for_pattern",
        "label": "problem_statement_possibly_direct_formula_for_pattern"
      }
    },
    {
      "data": {
        "id": "pattern_analysis",
        "label": "pattern_analysis"
      }
    },
    {
      "data": {
        "id": "sieve",
        "label": "sieve"
      }
    },
    {
      "data": {
        "id": "linear_scan_for_minimal_gap",
        "label": "linear_scan_for_minimal_gap"
      }
    },
    {
      "data": {
        "id": "greedy_using_last_occurrences",
        "label": "greedy_using_last_occurrences"
      }
    }
  ],
  "edges": [
    {
      "data": {
        "id": "e0",
        "source": "linkedlist_addition",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e1",
        "source": "linkedlist",
        "target": "arrays"
      }
    },
    {
      "data": {
        "id": "e2",
        "source": "linkedlist",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e3",
        "source": "arrays",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e4",
        "source": "data_structures",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e5",
        "source": "carry",
        "target": "addition"
      }
    },
    {
      "data": {
        "id": "e6",
        "source": "addition",
        "target": "mathematics"
      }
    },
    {
      "data": {
        "id": "e7",
        "source": "mathematics",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e8",
        "source": "mathematics",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e9",
        "source": "sliding_window",
        "target": "two_pointers"
      }
    },
    {
      "data": {
        "id": "e10",
        "source": "sliding_window",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e11",
        "source": "two_pointers",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e12",
        "source": "two_pointers",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e13",
        "source": "hashing",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e14",
        "source": "hashing",
        "target": "hashing"
      }
    },
    {
      "data": {
        "id": "e15",
        "source": "hashing",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e16",
        "source": "hashing",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e17",
        "source": "computer_science_basics",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e18",
        "source": "expand_around_center",
        "target": "strings"
      }
    },
    {
      "data": {
        "id": "e19",
        "source": "strings",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e20",
        "source": "strings",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e21",
        "source": "dp",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e22",
        "source": "dp",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e23",
        "source": "algorithm_design",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e24",
        "source": "math_manipulations",
        "target": "mathematics"
      }
    },
    {
      "data": {
        "id": "e25",
        "source": "handle_overflow",
        "target": "computer_arithmetic"
      }
    },
    {
      "data": {
        "id": "e26",
        "source": "computer_arithmetic",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e27",
        "source": "string_parsing",
        "target": "strings"
      }
    },
    {
      "data": {
        "id": "e28",
        "source": "edge_cases",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e29",
        "source": "two_pointer_approach",
        "target": "two_pointers"
      }
    },
    {
      "data": {
        "id": "e30",
        "source": "sorting",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e31",
        "source": "sorting",
        "target": "sorting"
      }
    },
    {
      "data": {
        "id": "e32",
        "source": "sorting",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e33",
        "source": "two_pointer",
        "target": "two_pointers"
      }
    },
    {
      "data": {
        "id": "e34",
        "source": "two_pointer",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e35",
        "source": "backtracking",
        "target": "backtracking"
      }
    },
    {
      "data": {
        "id": "e36",
        "source": "backtracking",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e37",
        "source": "phone_keypad_mapping",
        "target": "mappings"
      }
    },
    {
      "data": {
        "id": "e38",
        "source": "mappings",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e39",
        "source": "fast_slow_pointer",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e40",
        "source": "backtracking_with_constraints",
        "target": "backtracking"
      }
    },
    {
      "data": {
        "id": "e41",
        "source": "linked_list_node_swaps",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e42",
        "source": "math",
        "target": "mathematics"
      }
    },
    {
      "data": {
        "id": "e43",
        "source": "bit_manipulation",
        "target": "computer_arithmetic"
      }
    },
    {
      "data": {
        "id": "e44",
        "source": "bit_manipulation",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e45",
        "source": "permutation_rearrangement",
        "target": "algorithm_basics"
      }
    },
    {
      "data": {
        "id": "e46",
        "source": "algorithm_basics",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e47",
        "source": "binary_search_variant",
        "target": "binary_search"
      }
    },
    {
      "data": {
        "id": "e48",
        "source": "binary_search",
        "target": "binary_search"
      }
    },
    {
      "data": {
        "id": "e49",
        "source": "binary_search",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e50",
        "source": "binary_search_boundaries",
        "target": "binary_search"
      }
    },
    {
      "data": {
        "id": "e51",
        "source": "hash_sets_for_row_col_box",
        "target": "hash_set"
      }
    },
    {
      "data": {
        "id": "e52",
        "source": "hash_set",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e53",
        "source": "string_generation_pattern",
        "target": "algorithm_basics"
      }
    },
    {
      "data": {
        "id": "e54",
        "source": "backtracking_with_sorted_input",
        "target": "backtracking"
      }
    },
    {
      "data": {
        "id": "e55",
        "source": "string_multiplication_simulation",
        "target": "algorithm_basics"
      }
    },
    {
      "data": {
        "id": "e56",
        "source": "swapping",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e57",
        "source": "matrix_transpose",
        "target": "matrix"
      }
    },
    {
      "data": {
        "id": "e58",
        "source": "matrix",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e59",
        "source": "matrix",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e60",
        "source": "reverse",
        "target": "matrix"
      }
    },
    {
      "data": {
        "id": "e61",
        "source": "hashing_by_sorted_key_or_char_count",
        "target": "hash_set"
      }
    },
    {
      "data": {
        "id": "e62",
        "source": "fast_exponentiation",
        "target": "exponentiation"
      }
    },
    {
      "data": {
        "id": "e63",
        "source": "exponentiation",
        "target": "mathematics"
      }
    },
    {
      "data": {
        "id": "e64",
        "source": "kadanes_algorithm",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e65",
        "source": "simulation_of_boundary_loops",
        "target": "simulation"
      }
    },
    {
      "data": {
        "id": "e66",
        "source": "simulation",
        "target": "algorithm_basics"
      }
    },
    {
      "data": {
        "id": "e67",
        "source": "simulation",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e68",
        "source": "greedy_max_reach",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e69",
        "source": "greedy",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e70",
        "source": "greedy",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e71",
        "source": "merging",
        "target": "algorithm_basics"
      }
    },
    {
      "data": {
        "id": "e72",
        "source": "merging",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e73",
        "source": "intervals",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e74",
        "source": "intervals",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e75",
        "source": "intervals",
        "target": "intervals"
      }
    },
    {
      "data": {
        "id": "e76",
        "source": "combinatorics",
        "target": "mathematics"
      }
    },
    {
      "data": {
        "id": "e77",
        "source": "dp_with_obstacle_handling",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e78",
        "source": "stack_for_directories",
        "target": "stack"
      }
    },
    {
      "data": {
        "id": "e79",
        "source": "stack",
        "target": "stack"
      }
    },
    {
      "data": {
        "id": "e80",
        "source": "stack",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e81",
        "source": "dp_for_string_transformations",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e82",
        "source": "matrix_marking_approach",
        "target": "matrix"
      }
    },
    {
      "data": {
        "id": "e83",
        "source": "dutch_national_flag_algorithm",
        "target": "algorithm_basics"
      }
    },
    {
      "data": {
        "id": "e84",
        "source": "bitmask",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e85",
        "source": "bitmask",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e86",
        "source": "dfs_backtracking_on_board",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e87",
        "source": "dfs",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e88",
        "source": "dfs",
        "target": "graph_traversal"
      }
    },
    {
      "data": {
        "id": "e89",
        "source": "dfs",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e90",
        "source": "array_manipulation",
        "target": "arrays"
      }
    },
    {
      "data": {
        "id": "e91",
        "source": "pointer_approach",
        "target": "programming_basics"
      }
    },
    {
      "data": {
        "id": "e92",
        "source": "programming_basics",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e93",
        "source": "segment_validation",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e94",
        "source": "recursion_with_range_bounds",
        "target": "recursion"
      }
    },
    {
      "data": {
        "id": "e95",
        "source": "recursion",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e96",
        "source": "recursion",
        "target": "programming_basics"
      }
    },
    {
      "data": {
        "id": "e97",
        "source": "recursion",
        "target": "recursion"
      }
    },
    {
      "data": {
        "id": "e98",
        "source": "recursion",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e99",
        "source": "bfs_by_levels",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e100",
        "source": "bfs",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e101",
        "source": "bfs",
        "target": "graph_theory"
      }
    },
    {
      "data": {
        "id": "e102",
        "source": "bfs",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e103",
        "source": "bfs_with_direction_toggle",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e104",
        "source": "tree_construction_with_index_lookups",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e105",
        "source": "tree",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e106",
        "source": "tree",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e107",
        "source": "dfs_path_building",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e108",
        "source": "pointer_re_linking",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e109",
        "source": "tree_bfs",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e110",
        "source": "tree_bfs",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e111",
        "source": "perfect_tree_recursion",
        "target": "recursion"
      }
    },
    {
      "data": {
        "id": "e112",
        "source": "set",
        "target": "set"
      }
    },
    {
      "data": {
        "id": "e113",
        "source": "set",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e114",
        "source": "union_find",
        "target": "union_find"
      }
    },
    {
      "data": {
        "id": "e115",
        "source": "union_find",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e116",
        "source": "dfs_building_integer",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e117",
        "source": "palindrome_check",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e118",
        "source": "graph_bfs_dfs_cloning",
        "target": "graph"
      }
    },
    {
      "data": {
        "id": "e119",
        "source": "graph",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e120",
        "source": "graph",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e121",
        "source": "linked_list_mapping",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e122",
        "source": "weaving",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e123",
        "source": "dp_substring_checks",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e124",
        "source": "design_with_doubly_linked_list",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e125",
        "source": "hash",
        "target": "hashmap"
      }
    },
    {
      "data": {
        "id": "e126",
        "source": "hashmap",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e127",
        "source": "hashmap",
        "target": "hashmap"
      }
    },
    {
      "data": {
        "id": "e128",
        "source": "stack_for_rpn",
        "target": "stack"
      }
    },
    {
      "data": {
        "id": "e129",
        "source": "dp_tracking_min_max_up_to_current",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e130",
        "source": "binary_search_pivot",
        "target": "binary_search"
      }
    },
    {
      "data": {
        "id": "e131",
        "source": "string_manipulation",
        "target": "strings"
      }
    },
    {
      "data": {
        "id": "e132",
        "source": "linear_check",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e133",
        "source": "two_pointer_in_sorted_array",
        "target": "two_pointers"
      }
    },
    {
      "data": {
        "id": "e134",
        "source": "inorder_stack_approach",
        "target": "stack"
      }
    },
    {
      "data": {
        "id": "e135",
        "source": "reverse_array",
        "target": "arrays"
      }
    },
    {
      "data": {
        "id": "e136",
        "source": "auxiliary_array",
        "target": "arrays"
      }
    },
    {
      "data": {
        "id": "e137",
        "source": "dp_on_linear_houses",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e138",
        "source": "dfs_with_right_first",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e139",
        "source": "dfs_bfs_on_grid",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e140",
        "source": "graph_cycle_detection",
        "target": "graph"
      }
    },
    {
      "data": {
        "id": "e141",
        "source": "topological_sort",
        "target": "graph"
      }
    },
    {
      "data": {
        "id": "e142",
        "source": "sliding_window_and_subarray_sum",
        "target": "subarray_sum"
      }
    },
    {
      "data": {
        "id": "e143",
        "source": "subarray_sum",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e144",
        "source": "heap",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e145",
        "source": "heap",
        "target": "heap"
      }
    },
    {
      "data": {
        "id": "e146",
        "source": "quickselect",
        "target": "selection"
      }
    },
    {
      "data": {
        "id": "e147",
        "source": "selection",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e148",
        "source": "direct_parse",
        "target": "programming_basics"
      }
    },
    {
      "data": {
        "id": "e149",
        "source": "bst_property_compare_values",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e150",
        "source": "tree_recursion",
        "target": "recursion"
      }
    },
    {
      "data": {
        "id": "e151",
        "source": "prefix_suffix_multiplication",
        "target": "algorithm_basics"
      }
    },
    {
      "data": {
        "id": "e152",
        "source": "hash_pattern_differences",
        "target": "hashing"
      }
    },
    {
      "data": {
        "id": "e153",
        "source": "min_heap",
        "target": "heap"
      }
    },
    {
      "data": {
        "id": "e154",
        "source": "timeline_approach",
        "target": "timeline"
      }
    },
    {
      "data": {
        "id": "e155",
        "source": "timeline",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e156",
        "source": "multi_source_bfs",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e157",
        "source": "tree_dfs_for_sum_count",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e158",
        "source": "bfs_with_column_indices",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e159",
        "source": "tree_recursion_with_subtree_info",
        "target": "recursion"
      }
    },
    {
      "data": {
        "id": "e160",
        "source": "greedy_track_two_smallest",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e161",
        "source": "bfs_of_nested_structure",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e162",
        "source": "stack_based_flatten",
        "target": "stack"
      }
    },
    {
      "data": {
        "id": "e163",
        "source": "bucket_sort",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e164",
        "source": "rows",
        "target": "matrix"
      }
    },
    {
      "data": {
        "id": "e165",
        "source": "cols",
        "target": "matrix"
      }
    },
    {
      "data": {
        "id": "e166",
        "source": "diag_counters",
        "target": "matrix"
      }
    },
    {
      "data": {
        "id": "e167",
        "source": "binary_searching_by_value",
        "target": "binary_search"
      }
    },
    {
      "data": {
        "id": "e168",
        "source": "dynamic_array",
        "target": "array"
      }
    },
    {
      "data": {
        "id": "e169",
        "source": "array",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e170",
        "source": "array",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e171",
        "source": "reservoir_sampling",
        "target": "sampling"
      }
    },
    {
      "data": {
        "id": "e172",
        "source": "sampling",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e173",
        "source": "storing_indices",
        "target": "list"
      }
    },
    {
      "data": {
        "id": "e174",
        "source": "list",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e175",
        "source": "grid_scanning",
        "target": "grid"
      }
    },
    {
      "data": {
        "id": "e176",
        "source": "grid",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e177",
        "source": "frequency",
        "target": "hashmap"
      }
    },
    {
      "data": {
        "id": "e178",
        "source": "frequency",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e179",
        "source": "two_pointer_in_place",
        "target": "two_pointers"
      }
    },
    {
      "data": {
        "id": "e180",
        "source": "string_split_and_format_checks",
        "target": "strings"
      }
    },
    {
      "data": {
        "id": "e181",
        "source": "dfs_bfs_rolling_approach",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e182",
        "source": "subset_sum_dp",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e183",
        "source": "simulation_of_diagonals",
        "target": "simulation"
      }
    },
    {
      "data": {
        "id": "e184",
        "source": "prefix_sum_mod_k",
        "target": "prefix_sum"
      }
    },
    {
      "data": {
        "id": "e185",
        "source": "prefix_sum",
        "target": "prefix_sum"
      }
    },
    {
      "data": {
        "id": "e186",
        "source": "prefix_sum",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e187",
        "source": "prefix_sum_0_neg1_1_pos1",
        "target": "prefix_sum"
      }
    },
    {
      "data": {
        "id": "e188",
        "source": "dfs_bfs_reveal_squares",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e189",
        "source": "recursion_with_parentheses_parse",
        "target": "recursion"
      }
    },
    {
      "data": {
        "id": "e190",
        "source": "tree_traversal_boundary",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e191",
        "source": "permutation_next_greater_logic",
        "target": "permutation"
      }
    },
    {
      "data": {
        "id": "e192",
        "source": "permutation",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e193",
        "source": "stack_of_function_calls",
        "target": "stack"
      }
    },
    {
      "data": {
        "id": "e194",
        "source": "timestamps",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e195",
        "source": "greedy_digit_swap_from_left",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e196",
        "source": "dfs_bfs_in_grid",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e197",
        "source": "dfs_on_email_lists",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e198",
        "source": "stack_approach",
        "target": "stack"
      }
    },
    {
      "data": {
        "id": "e199",
        "source": "monotonic_stack",
        "target": "stack"
      }
    },
    {
      "data": {
        "id": "e200",
        "source": "inorder_traversal_link",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e201",
        "source": "shortest_path_with_limited_stops",
        "target": "graph"
      }
    },
    {
      "data": {
        "id": "e202",
        "source": "bellman_ford",
        "target": "graph"
      }
    },
    {
      "data": {
        "id": "e203",
        "source": "custom_priority_sort",
        "target": "sorting"
      }
    },
    {
      "data": {
        "id": "e204",
        "source": "linked_list_insertion_logic",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e205",
        "source": "two_pointer_on_age_constraints",
        "target": "two_pointers"
      }
    },
    {
      "data": {
        "id": "e206",
        "source": "array_with_front_rear_indices",
        "target": "arrays"
      }
    },
    {
      "data": {
        "id": "e207",
        "source": "binary_search_for_peak",
        "target": "binary_search"
      }
    },
    {
      "data": {
        "id": "e208",
        "source": "bfs_dfs_from_target_node",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e209",
        "source": "tree_dfs",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e210",
        "source": "depth_tracking",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e211",
        "source": "prefix_sums",
        "target": "prefix_sum"
      }
    },
    {
      "data": {
        "id": "e212",
        "source": "random_selection",
        "target": "probabilistic_methods"
      }
    },
    {
      "data": {
        "id": "e213",
        "source": "probabilistic_methods",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e214",
        "source": "balance_counters",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e215",
        "source": "prefix_sum_in_0_1_array",
        "target": "prefix_sum"
      }
    },
    {
      "data": {
        "id": "e216",
        "source": "bfs_across_islands",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e217",
        "source": "bfs_level_order_checking",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e218",
        "source": "dp_with_intervals",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e219",
        "source": "merge_intervals_method",
        "target": "intervals"
      }
    },
    {
      "data": {
        "id": "e220",
        "source": "count_zero",
        "target": "counting"
      }
    },
    {
      "data": {
        "id": "e221",
        "source": "counting",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e222",
        "source": "binary_search_on_capacity",
        "target": "binary_search"
      }
    },
    {
      "data": {
        "id": "e223",
        "source": "binary_search_using_the_missing_counts",
        "target": "binary_search"
      }
    },
    {
      "data": {
        "id": "e224",
        "source": "bfs_in_8_directions",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e225",
        "source": "stack_based_count",
        "target": "stack"
      }
    },
    {
      "data": {
        "id": "e226",
        "source": "scanning_mismatches",
        "target": "scanning"
      }
    },
    {
      "data": {
        "id": "e227",
        "source": "scanning",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e228",
        "source": "group_by_i_plus_j_in_a_map",
        "target": "maps"
      }
    },
    {
      "data": {
        "id": "e229",
        "source": "maps",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e230",
        "source": "dfs_subtrees_with_apple_check",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e231",
        "source": "sparse_representation_iteration",
        "target": "sparse_representation"
      }
    },
    {
      "data": {
        "id": "e232",
        "source": "sparse_representation",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e233",
        "source": "nodes_have_parent_pointers",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e234",
        "source": "scanning_from_the_right",
        "target": "scanning"
      }
    },
    {
      "data": {
        "id": "e235",
        "source": "interactive_bfs_dfs_concept",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e236",
        "source": "two_pointers_on_runs",
        "target": "two_pointers"
      }
    },
    {
      "data": {
        "id": "e237",
        "source": "sql_grouping_and_joining",
        "target": "sql"
      }
    },
    {
      "data": {
        "id": "e238",
        "source": "sql",
        "target": "database_fundamentals"
      }
    },
    {
      "data": {
        "id": "e239",
        "source": "database_fundamentals",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e240",
        "source": "dp_for_the_fewest_coins",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e241",
        "source": "linked_list_rearrangement",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e242",
        "source": "implementation_of_standard_sorts",
        "target": "sorting"
      }
    },
    {
      "data": {
        "id": "e243",
        "source": "math_formula",
        "target": "mathematics"
      }
    },
    {
      "data": {
        "id": "e244",
        "source": "dp_on_string_decoding",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e245",
        "source": "level_order_bfs_linking",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e246",
        "source": "check_single_insert_delete_replace",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e247",
        "source": "bst_iteration_with_backtracking",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e248",
        "source": "dfs_depth",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e249",
        "source": "lca_logic",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e250",
        "source": "prefix_sum_map",
        "target": "prefix_sum"
      }
    },
    {
      "data": {
        "id": "e251",
        "source": "dp_counting_combos",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e252",
        "source": "similar_bfs_with_hidden_adjacency",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e253",
        "source": "in_place_pointer_swap",
        "target": "pointer"
      }
    },
    {
      "data": {
        "id": "e254",
        "source": "pointer",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e255",
        "source": "linked_list_re_linking",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e256",
        "source": "linked_list_skip_duplicates",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e257",
        "source": "custom_sorting_by_string_comparison",
        "target": "sorting"
      }
    },
    {
      "data": {
        "id": "e258",
        "source": "greedy_bfs_layering",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e259",
        "source": "bst_node_manipulation",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e260",
        "source": "greedy_solution",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e261",
        "source": "constraints",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e262",
        "source": "binary_search_on_eating_speed",
        "target": "binary_search"
      }
    },
    {
      "data": {
        "id": "e263",
        "source": "inorder_traversal",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e264",
        "source": "bitmask_prefix_approach",
        "target": "bitmask"
      }
    },
    {
      "data": {
        "id": "e265",
        "source": "scan_for_segments_matching_global_max",
        "target": "scanning"
      }
    },
    {
      "data": {
        "id": "e266",
        "source": "convert_times_to_minutes",
        "target": "time_conversion"
      }
    },
    {
      "data": {
        "id": "e267",
        "source": "time_conversion",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e268",
        "source": "sort",
        "target": "sorting"
      }
    },
    {
      "data": {
        "id": "e269",
        "source": "dp_subset_sum",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e270",
        "source": "greedy_for_multiple_transactions",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e271",
        "source": "iterative_approach",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e272",
        "source": "char_count",
        "target": "character_count"
      }
    },
    {
      "data": {
        "id": "e273",
        "source": "character_count",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e274",
        "source": "simple_prefix_check_among_strings",
        "target": "strings"
      }
    },
    {
      "data": {
        "id": "e275",
        "source": "binary_search_with_duplicates",
        "target": "binary_search"
      }
    },
    {
      "data": {
        "id": "e276",
        "source": "dfs_checking_subpath",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e277",
        "source": "greedy_with_a_max_heap",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e278",
        "source": "sorting_by_freq",
        "target": "sorting"
      }
    },
    {
      "data": {
        "id": "e279",
        "source": "bitwise_ops",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e280",
        "source": "prefix_sum_remainder_approach",
        "target": "prefix_sum"
      }
    },
    {
      "data": {
        "id": "e281",
        "source": "catalan_numbers",
        "target": "mathematics"
      }
    },
    {
      "data": {
        "id": "e282",
        "source": "greedy_from_largest_roman_values",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e283",
        "source": "similar_to_lca_but_confirm_nodes_exist",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e284",
        "source": "tree_dfs_cut_approach",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e285",
        "source": "hash_mod_frequencies",
        "target": "hashing"
      }
    },
    {
      "data": {
        "id": "e286",
        "source": "interval_scheduling",
        "target": "intervals"
      }
    },
    {
      "data": {
        "id": "e287",
        "source": "floyds_cycle_detection",
        "target": "cycle_detection"
      }
    },
    {
      "data": {
        "id": "e288",
        "source": "cycle_detection",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e289",
        "source": "prefix_check",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e290",
        "source": "recursive_pattern",
        "target": "recursion"
      }
    },
    {
      "data": {
        "id": "e291",
        "source": "sum_approach_minus_min",
        "target": "summation"
      }
    },
    {
      "data": {
        "id": "e292",
        "source": "summation",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e293",
        "source": "used_set",
        "target": "set"
      }
    },
    {
      "data": {
        "id": "e294",
        "source": "min_max_queue",
        "target": "queue"
      }
    },
    {
      "data": {
        "id": "e295",
        "source": "queue",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e296",
        "source": "distinct_check",
        "target": "distinctness"
      }
    },
    {
      "data": {
        "id": "e297",
        "source": "distinctness",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e298",
        "source": "binary_search_for_max_length",
        "target": "binary_search"
      }
    },
    {
      "data": {
        "id": "e299",
        "source": "boyer_moore_for_two_candidates",
        "target": "majority"
      }
    },
    {
      "data": {
        "id": "e300",
        "source": "majority",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e301",
        "source": "math_symmetry",
        "target": "mathematics"
      }
    },
    {
      "data": {
        "id": "e302",
        "source": "dfs_postorder",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e303",
        "source": "slow_fast_pointer_find_mid",
        "target": "two_pointer"
      }
    },
    {
      "data": {
        "id": "e304",
        "source": "set_approach_for_squares",
        "target": "set"
      }
    },
    {
      "data": {
        "id": "e305",
        "source": "greedy_by_end_time",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e306",
        "source": "pow2_usage",
        "target": "exponential"
      }
    },
    {
      "data": {
        "id": "e307",
        "source": "exponential",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e308",
        "source": "bit_manipulation_counting_bits_mod_3",
        "target": "bit_manipulation"
      }
    },
    {
      "data": {
        "id": "e309",
        "source": "mark_intervals_and_merge",
        "target": "intervals"
      }
    },
    {
      "data": {
        "id": "e310",
        "source": "start_top_right_corner",
        "target": "matrix"
      }
    },
    {
      "data": {
        "id": "e311",
        "source": "move_left_down",
        "target": "matrix"
      }
    },
    {
      "data": {
        "id": "e312",
        "source": "check_flips_to_get_alternating_pattern",
        "target": "string"
      }
    },
    {
      "data": {
        "id": "e313",
        "source": "string",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e314",
        "source": "string",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e315",
        "source": "likely_checking_partial_swaps_or_some_condition",
        "target": "sorting"
      }
    },
    {
      "data": {
        "id": "e316",
        "source": "tracking_zero_count",
        "target": "counting"
      }
    },
    {
      "data": {
        "id": "e317",
        "source": "simulation_row_by_row",
        "target": "simulation"
      }
    },
    {
      "data": {
        "id": "e318",
        "source": "problem_specific_partial_info",
        "target": "domain_specific"
      }
    },
    {
      "data": {
        "id": "e319",
        "source": "domain_specific",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e320",
        "source": "design_with_data_structures",
        "target": "software_engineering"
      }
    },
    {
      "data": {
        "id": "e321",
        "source": "software_engineering",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e322",
        "source": "bitwise_or",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e323",
        "source": "bst_with_parent_pointer",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e324",
        "source": "min_heap_of_seats",
        "target": "heap"
      }
    },
    {
      "data": {
        "id": "e325",
        "source": "two_pointer_from_ends",
        "target": "two_pointers"
      }
    },
    {
      "data": {
        "id": "e326",
        "source": "count",
        "target": "frequency"
      }
    },
    {
      "data": {
        "id": "e327",
        "source": "sort_desc_frequency",
        "target": "sorting"
      }
    },
    {
      "data": {
        "id": "e328",
        "source": "inorder_flatten",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e329",
        "source": "build_balanced",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e330",
        "source": "simulation_of_collapses",
        "target": "simulation"
      }
    },
    {
      "data": {
        "id": "e331",
        "source": "counting_depth",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e332",
        "source": "bfs_level_sums",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e333",
        "source": "backtracking_k_combinations",
        "target": "backtracking"
      }
    },
    {
      "data": {
        "id": "e334",
        "source": "subarray_coverage",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e335",
        "source": "kadanes",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e336",
        "source": "invert_approach",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e337",
        "source": "greedy_track_min_max_open",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e338",
        "source": "dfs_from_edges_inward",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e339",
        "source": "sql_ranking_or_subquery",
        "target": "sql"
      }
    },
    {
      "data": {
        "id": "e340",
        "source": "recursion_building_symmetrical_pairs",
        "target": "recursion"
      }
    },
    {
      "data": {
        "id": "e341",
        "source": "sliding_window_and_a_b_c",
        "target": "sliding_window"
      }
    },
    {
      "data": {
        "id": "e342",
        "source": "string_building_with_known_indices",
        "target": "strings"
      }
    },
    {
      "data": {
        "id": "e343",
        "source": "greedy_sorting_by_cost_difference",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e344",
        "source": "double_dfs_approach",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e345",
        "source": "map_freq",
        "target": "frequency"
      }
    },
    {
      "data": {
        "id": "e346",
        "source": "greedy_alignment_check_of_l_r",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e347",
        "source": "counting_depth_from_t",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e348",
        "source": "divide_and_conquer",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e349",
        "source": "string_hashing",
        "target": "strings"
      }
    },
    {
      "data": {
        "id": "e350",
        "source": "suffix_array_approach",
        "target": "suffix_structures"
      }
    },
    {
      "data": {
        "id": "e351",
        "source": "suffix_structures",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e352",
        "source": "reservoir_sampling_for_single_item",
        "target": "sampling"
      }
    },
    {
      "data": {
        "id": "e353",
        "source": "dp_approach_problem_specific",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e354",
        "source": "multiply_device_counts_in_consecutive_non_empty_rows",
        "target": "hardware"
      }
    },
    {
      "data": {
        "id": "e355",
        "source": "hardware",
        "target": "domain_specific"
      }
    },
    {
      "data": {
        "id": "e356",
        "source": "dp_counting_squares",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e357",
        "source": "prefix_difference",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e358",
        "source": "circular_array",
        "target": "arrays"
      }
    },
    {
      "data": {
        "id": "e359",
        "source": "interval_booking_check",
        "target": "intervals"
      }
    },
    {
      "data": {
        "id": "e360",
        "source": "compare_row_patterns_with_column_patterns",
        "target": "strings"
      }
    },
    {
      "data": {
        "id": "e361",
        "source": "bfs_track_max_in_each_level",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e362",
        "source": "diagonal",
        "target": "matrix"
      }
    },
    {
      "data": {
        "id": "e363",
        "source": "dp_track_best_ai_plus_i_while_scanning",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e364",
        "source": "stack_with_a_min_tracker",
        "target": "stack"
      }
    },
    {
      "data": {
        "id": "e365",
        "source": "dp_with_steps",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e366",
        "source": "zero_one_increments",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e367",
        "source": "greedy_scanning_of_s_to_build_t",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e368",
        "source": "bfs_from_leaves_inward",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e369",
        "source": "multi_source_bfs_from_all_zero_cells",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e370",
        "source": "vs_suffix_sums",
        "target": "array"
      }
    },
    {
      "data": {
        "id": "e371",
        "source": "track_positions_of_each_character",
        "target": "strings"
      }
    },
    {
      "data": {
        "id": "e372",
        "source": "freq_compare",
        "target": "frequency"
      }
    },
    {
      "data": {
        "id": "e373",
        "source": "prefix_approach_on_shift_ranges",
        "target": "prefix_sum"
      }
    },
    {
      "data": {
        "id": "e374",
        "source": "dfs_bfs_from_board_edges",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e375",
        "source": "counting_distances",
        "target": "arrays"
      }
    },
    {
      "data": {
        "id": "e376",
        "source": "dfs_adjacency",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e377",
        "source": "check_leading_bits_of_each_byte",
        "target": "bit_representation"
      }
    },
    {
      "data": {
        "id": "e378",
        "source": "bit_representation",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e379",
        "source": "keep_smaller_digits",
        "target": "selection"
      }
    },
    {
      "data": {
        "id": "e380",
        "source": "frequency_requirement_across_b",
        "target": "frequency"
      }
    },
    {
      "data": {
        "id": "e381",
        "source": "check_number_of_odd_freq_chars",
        "target": "frequency"
      }
    },
    {
      "data": {
        "id": "e382",
        "source": "partial_lock_approach",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e383",
        "source": "rolling_hash",
        "target": "string"
      }
    },
    {
      "data": {
        "id": "e384",
        "source": "count_consecutive_zero_segments",
        "target": "array"
      }
    },
    {
      "data": {
        "id": "e385",
        "source": "set_based",
        "target": "set"
      }
    },
    {
      "data": {
        "id": "e386",
        "source": "index_based_counting",
        "target": "counting"
      }
    },
    {
      "data": {
        "id": "e387",
        "source": "hash_points_by_x_or_y",
        "target": "geometry"
      }
    },
    {
      "data": {
        "id": "e388",
        "source": "geometry",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e389",
        "source": "spiral_fill_with_linked_list",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e390",
        "source": "likely_sliding_window",
        "target": "two_pointers"
      }
    },
    {
      "data": {
        "id": "e391",
        "source": "choose_subsequences",
        "target": "selection"
      }
    },
    {
      "data": {
        "id": "e392",
        "source": "linked_list_partial_reverse",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e393",
        "source": "delim",
        "target": "strings"
      }
    },
    {
      "data": {
        "id": "e394",
        "source": "length_prefix_approach",
        "target": "prefix"
      }
    },
    {
      "data": {
        "id": "e395",
        "source": "prefix",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e396",
        "source": "unlimited_usage",
        "target": "domain_specific"
      }
    },
    {
      "data": {
        "id": "e397",
        "source": "row_col_counting_in_a_grid",
        "target": "matrix"
      }
    },
    {
      "data": {
        "id": "e398",
        "source": "linked_list_rotate_by_k_steps",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e399",
        "source": "dfs_placing_nodes_in_the_correct_position",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e400",
        "source": "multi_source_bfs_from_rotten_oranges",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e401",
        "source": "greedy_to_form_complete_pairs",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e402",
        "source": "likely_dp",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e403",
        "source": "dfs_bfs_with_sum_of_fish",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e404",
        "source": "use_points_set_to_find_rectangle_corners",
        "target": "geometry"
      }
    },
    {
      "data": {
        "id": "e405",
        "source": "union_find_in_a_tree",
        "target": "union_find"
      }
    },
    {
      "data": {
        "id": "e406",
        "source": "k_limited_bfs",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e407",
        "source": "dfs_track_max_so_far",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e408",
        "source": "linked_list_partition_by_x",
        "target": "linkedlist"
      }
    },
    {
      "data": {
        "id": "e409",
        "source": "map_file_contents_list_of_paths",
        "target": "map"
      }
    },
    {
      "data": {
        "id": "e410",
        "source": "map",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e411",
        "source": "binary_search_on_pairs",
        "target": "binary_search"
      }
    },
    {
      "data": {
        "id": "e412",
        "source": "patience_sorting",
        "target": "sorting"
      }
    },
    {
      "data": {
        "id": "e413",
        "source": "bfs_from_the_entrance",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e414",
        "source": "dp_with_two_indices",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e415",
        "source": "hash_product_list_of_pairs",
        "target": "hashing"
      }
    },
    {
      "data": {
        "id": "e416",
        "source": "dp_on_circular_array",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e417",
        "source": "map_of_key_list_of_timestamp_value",
        "target": "map"
      }
    },
    {
      "data": {
        "id": "e418",
        "source": "counting_odd_numbers",
        "target": "counting"
      }
    },
    {
      "data": {
        "id": "e419",
        "source": "map_digit_sum_top_two_values",
        "target": "mathematics"
      }
    },
    {
      "data": {
        "id": "e420",
        "source": "recursively_with_boundaries",
        "target": "recursion"
      }
    },
    {
      "data": {
        "id": "e421",
        "source": "reverse_depth_weighting",
        "target": "tree"
      }
    },
    {
      "data": {
        "id": "e422",
        "source": "problem_specific_possibly_bfs",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e423",
        "source": "graph_theory",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e424",
        "source": "sql_grouping_or_join",
        "target": "sql"
      }
    },
    {
      "data": {
        "id": "e425",
        "source": "keep_prefix_product",
        "target": "prefix_product"
      }
    },
    {
      "data": {
        "id": "e426",
        "source": "prefix_product",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e427",
        "source": "handle_zeros",
        "target": "zero_handling"
      }
    },
    {
      "data": {
        "id": "e428",
        "source": "zero_handling",
        "target": "data_structures"
      }
    },
    {
      "data": {
        "id": "e429",
        "source": "dfs_from_boundary_to_mark_open_water",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e430",
        "source": "graph_traversal",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e431",
        "source": "frequency_map",
        "target": "hashmap"
      }
    },
    {
      "data": {
        "id": "e432",
        "source": "elimination",
        "target": "elimination"
      }
    },
    {
      "data": {
        "id": "e433",
        "source": "elimination",
        "target": "problem_solving_strategies"
      }
    },
    {
      "data": {
        "id": "e434",
        "source": "problem_solving_strategies",
        "target": "cc"
      }
    },
    {
      "data": {
        "id": "e435",
        "source": "verify",
        "target": "verification"
      }
    },
    {
      "data": {
        "id": "e436",
        "source": "verification",
        "target": "computer_science_basics"
      }
    },
    {
      "data": {
        "id": "e437",
        "source": "bfs_in_lex_order",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e438",
        "source": "2d_prefix_sum",
        "target": "prefix_sum"
      }
    },
    {
      "data": {
        "id": "e439",
        "source": "only_multiply_non_zero_elements",
        "target": "matrix"
      }
    },
    {
      "data": {
        "id": "e440",
        "source": "bfs_for_minimal_steps",
        "target": "bfs"
      }
    },
    {
      "data": {
        "id": "e441",
        "source": "recursive_generation_of_bsts",
        "target": "recursion"
      }
    },
    {
      "data": {
        "id": "e442",
        "source": "graph_2_coloring",
        "target": "graph"
      }
    },
    {
      "data": {
        "id": "e443",
        "source": "allowing_one_zero_flip",
        "target": "sliding_window"
      }
    },
    {
      "data": {
        "id": "e444",
        "source": "tree_dfs_with_path_constraints",
        "target": "dfs"
      }
    },
    {
      "data": {
        "id": "e445",
        "source": "dp_tracking_squares",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e446",
        "source": "transform_to_house_robber_on_freq_array",
        "target": "dp"
      }
    },
    {
      "data": {
        "id": "e447",
        "source": "greedy_scheduling_based_on_most_frequent_tasks",
        "target": "greedy"
      }
    },
    {
      "data": {
        "id": "e448",
        "source": "prefix_sum_mod_technique",
        "target": "prefix_sum"
      }
    },
    {
      "data": {
        "id": "e449",
        "source": "problem_specific_possibly_check_deviation_from_mean",
        "target": "statistical_analysis"
      }
    },
    {
      "data": {
        "id": "e450",
        "source": "statistical_analysis",
        "target": "domain_specific"
      }
    },
    {
      "data": {
        "id": "e451",
        "source": "prefix_sum_parity_counting",
        "target": "prefix_sum"
      }
    },
    {
      "data": {
        "id": "e452",
        "source": "sieve_of_eratosthenes",
        "target": "number_theory"
      }
    },
    {
      "data": {
        "id": "e453",
        "source": "number_theory",
        "target": "mathematics"
      }
    },
    {
      "data": {
        "id": "e454",
        "source": "generate_n_by_n_spiral",
        "target": "matrix"
      }
    },
    {
      "data": {
        "id": "e455",
        "source": "problem_statement_possibly_direct_formula_for_pattern",
        "target": "pattern_analysis"
      }
    },
    {
      "data": {
        "id": "e456",
        "source": "pattern_analysis",
        "target": "domain_specific"
      }
    },
    {
      "data": {
        "id": "e457",
        "source": "sieve",
        "target": "number_theory"
      }
    },
    {
      "data": {
        "id": "e458",
        "source": "linear_scan_for_minimal_gap",
        "target": "algorithm_design"
      }
    },
    {
      "data": {
        "id": "e459",
        "source": "greedy_using_last_occurrences",
        "target": "greedy"
      }
    }
  ]
}