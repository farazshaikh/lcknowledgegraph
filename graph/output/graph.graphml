<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key id="d0" for="node" attr.name="id" attr.type="long" />
  <graph edgedefault="directed">
    <node id="linkedlist_addition">
      <data key="d0">0</data>
    </node>
    <node id="linkedlist">
      <data key="d0">1</data>
    </node>
    <node id="arrays">
      <data key="d0">2</data>
    </node>
    <node id="data_structures">
      <data key="d0">3</data>
    </node>
    <node id="cc">
      <data key="d0">4</data>
    </node>
    <node id="carry">
      <data key="d0">5</data>
    </node>
    <node id="addition">
      <data key="d0">6</data>
    </node>
    <node id="mathematics">
      <data key="d0">7</data>
    </node>
    <node id="sliding_window">
      <data key="d0">8</data>
    </node>
    <node id="two_pointers">
      <data key="d0">9</data>
    </node>
    <node id="hashing">
      <data key="d0">10</data>
    </node>
    <node id="computer_science_basics">
      <data key="d0">11</data>
    </node>
    <node id="expand_around_center">
      <data key="d0">12</data>
    </node>
    <node id="strings">
      <data key="d0">13</data>
    </node>
    <node id="dp">
      <data key="d0">14</data>
    </node>
    <node id="algorithm_design">
      <data key="d0">15</data>
    </node>
    <node id="math_manipulations">
      <data key="d0">16</data>
    </node>
    <node id="handle_overflow">
      <data key="d0">17</data>
    </node>
    <node id="computer_arithmetic">
      <data key="d0">18</data>
    </node>
    <node id="string_parsing">
      <data key="d0">19</data>
    </node>
    <node id="edge_cases">
      <data key="d0">20</data>
    </node>
    <node id="two_pointer_approach">
      <data key="d0">21</data>
    </node>
    <node id="sorting">
      <data key="d0">22</data>
    </node>
    <node id="two_pointer">
      <data key="d0">23</data>
    </node>
    <node id="backtracking">
      <data key="d0">24</data>
    </node>
    <node id="phone_keypad_mapping">
      <data key="d0">25</data>
    </node>
    <node id="mappings">
      <data key="d0">26</data>
    </node>
    <node id="fast_slow_pointer">
      <data key="d0">27</data>
    </node>
    <node id="backtracking_with_constraints">
      <data key="d0">28</data>
    </node>
    <node id="linked_list_node_swaps">
      <data key="d0">29</data>
    </node>
    <node id="math">
      <data key="d0">30</data>
    </node>
    <node id="bit_manipulation">
      <data key="d0">31</data>
    </node>
    <node id="permutation_rearrangement">
      <data key="d0">32</data>
    </node>
    <node id="algorithm_basics">
      <data key="d0">33</data>
    </node>
    <node id="binary_search_variant">
      <data key="d0">34</data>
    </node>
    <node id="binary_search">
      <data key="d0">35</data>
    </node>
    <node id="binary_search_boundaries">
      <data key="d0">36</data>
    </node>
    <node id="hash_sets_for_row_col_box">
      <data key="d0">37</data>
    </node>
    <node id="hash_set">
      <data key="d0">38</data>
    </node>
    <node id="string_generation_pattern">
      <data key="d0">39</data>
    </node>
    <node id="backtracking_with_sorted_input">
      <data key="d0">40</data>
    </node>
    <node id="string_multiplication_simulation">
      <data key="d0">41</data>
    </node>
    <node id="swapping">
      <data key="d0">42</data>
    </node>
    <node id="matrix_transpose">
      <data key="d0">43</data>
    </node>
    <node id="matrix">
      <data key="d0">44</data>
    </node>
    <node id="reverse">
      <data key="d0">45</data>
    </node>
    <node id="hashing_by_sorted_key_or_char_count">
      <data key="d0">46</data>
    </node>
    <node id="fast_exponentiation">
      <data key="d0">47</data>
    </node>
    <node id="exponentiation">
      <data key="d0">48</data>
    </node>
    <node id="kadanes_algorithm">
      <data key="d0">49</data>
    </node>
    <node id="simulation_of_boundary_loops">
      <data key="d0">50</data>
    </node>
    <node id="simulation">
      <data key="d0">51</data>
    </node>
    <node id="greedy_max_reach">
      <data key="d0">52</data>
    </node>
    <node id="greedy">
      <data key="d0">53</data>
    </node>
    <node id="merging">
      <data key="d0">54</data>
    </node>
    <node id="intervals">
      <data key="d0">55</data>
    </node>
    <node id="combinatorics">
      <data key="d0">56</data>
    </node>
    <node id="dp_with_obstacle_handling">
      <data key="d0">57</data>
    </node>
    <node id="stack_for_directories">
      <data key="d0">58</data>
    </node>
    <node id="stack">
      <data key="d0">59</data>
    </node>
    <node id="dp_for_string_transformations">
      <data key="d0">60</data>
    </node>
    <node id="matrix_marking_approach">
      <data key="d0">61</data>
    </node>
    <node id="dutch_national_flag_algorithm">
      <data key="d0">62</data>
    </node>
    <node id="bitmask">
      <data key="d0">63</data>
    </node>
    <node id="dfs_backtracking_on_board">
      <data key="d0">64</data>
    </node>
    <node id="dfs">
      <data key="d0">65</data>
    </node>
    <node id="array_manipulation">
      <data key="d0">66</data>
    </node>
    <node id="pointer_approach">
      <data key="d0">67</data>
    </node>
    <node id="programming_basics">
      <data key="d0">68</data>
    </node>
    <node id="segment_validation">
      <data key="d0">69</data>
    </node>
    <node id="recursion_with_range_bounds">
      <data key="d0">70</data>
    </node>
    <node id="recursion">
      <data key="d0">71</data>
    </node>
    <node id="bfs_by_levels">
      <data key="d0">72</data>
    </node>
    <node id="bfs">
      <data key="d0">73</data>
    </node>
    <node id="bfs_with_direction_toggle">
      <data key="d0">74</data>
    </node>
    <node id="tree_construction_with_index_lookups">
      <data key="d0">75</data>
    </node>
    <node id="tree">
      <data key="d0">76</data>
    </node>
    <node id="dfs_path_building">
      <data key="d0">77</data>
    </node>
    <node id="pointer_re_linking">
      <data key="d0">78</data>
    </node>
    <node id="tree_bfs">
      <data key="d0">79</data>
    </node>
    <node id="perfect_tree_recursion">
      <data key="d0">80</data>
    </node>
    <node id="set">
      <data key="d0">81</data>
    </node>
    <node id="union_find">
      <data key="d0">82</data>
    </node>
    <node id="dfs_building_integer">
      <data key="d0">83</data>
    </node>
    <node id="palindrome_check">
      <data key="d0">84</data>
    </node>
    <node id="graph_bfs_dfs_cloning">
      <data key="d0">85</data>
    </node>
    <node id="graph">
      <data key="d0">86</data>
    </node>
    <node id="linked_list_mapping">
      <data key="d0">87</data>
    </node>
    <node id="weaving">
      <data key="d0">88</data>
    </node>
    <node id="dp_substring_checks">
      <data key="d0">89</data>
    </node>
    <node id="design_with_doubly_linked_list">
      <data key="d0">90</data>
    </node>
    <node id="hash">
      <data key="d0">91</data>
    </node>
    <node id="hashmap">
      <data key="d0">92</data>
    </node>
    <node id="stack_for_rpn">
      <data key="d0">93</data>
    </node>
    <node id="dp_tracking_min_max_up_to_current">
      <data key="d0">94</data>
    </node>
    <node id="binary_search_pivot">
      <data key="d0">95</data>
    </node>
    <node id="string_manipulation">
      <data key="d0">96</data>
    </node>
    <node id="linear_check">
      <data key="d0">97</data>
    </node>
    <node id="two_pointer_in_sorted_array">
      <data key="d0">98</data>
    </node>
    <node id="inorder_stack_approach">
      <data key="d0">99</data>
    </node>
    <node id="reverse_array">
      <data key="d0">100</data>
    </node>
    <node id="auxiliary_array">
      <data key="d0">101</data>
    </node>
    <node id="dp_on_linear_houses">
      <data key="d0">102</data>
    </node>
    <node id="dfs_with_right_first">
      <data key="d0">103</data>
    </node>
    <node id="dfs_bfs_on_grid">
      <data key="d0">104</data>
    </node>
    <node id="graph_cycle_detection">
      <data key="d0">105</data>
    </node>
    <node id="topological_sort">
      <data key="d0">106</data>
    </node>
    <node id="sliding_window_and_subarray_sum">
      <data key="d0">107</data>
    </node>
    <node id="subarray_sum">
      <data key="d0">108</data>
    </node>
    <node id="heap">
      <data key="d0">109</data>
    </node>
    <node id="quickselect">
      <data key="d0">110</data>
    </node>
    <node id="selection">
      <data key="d0">111</data>
    </node>
    <node id="direct_parse">
      <data key="d0">112</data>
    </node>
    <node id="bst_property_compare_values">
      <data key="d0">113</data>
    </node>
    <node id="tree_recursion">
      <data key="d0">114</data>
    </node>
    <node id="prefix_suffix_multiplication">
      <data key="d0">115</data>
    </node>
    <node id="hash_pattern_differences">
      <data key="d0">116</data>
    </node>
    <node id="min_heap">
      <data key="d0">117</data>
    </node>
    <node id="timeline_approach">
      <data key="d0">118</data>
    </node>
    <node id="timeline">
      <data key="d0">119</data>
    </node>
    <node id="multi_source_bfs">
      <data key="d0">120</data>
    </node>
    <node id="tree_dfs_for_sum_count">
      <data key="d0">121</data>
    </node>
    <node id="bfs_with_column_indices">
      <data key="d0">122</data>
    </node>
    <node id="tree_recursion_with_subtree_info">
      <data key="d0">123</data>
    </node>
    <node id="greedy_track_two_smallest">
      <data key="d0">124</data>
    </node>
    <node id="bfs_of_nested_structure">
      <data key="d0">125</data>
    </node>
    <node id="stack_based_flatten">
      <data key="d0">126</data>
    </node>
    <node id="bucket_sort">
      <data key="d0">127</data>
    </node>
    <node id="rows">
      <data key="d0">128</data>
    </node>
    <node id="cols">
      <data key="d0">129</data>
    </node>
    <node id="diag_counters">
      <data key="d0">130</data>
    </node>
    <node id="binary_searching_by_value">
      <data key="d0">131</data>
    </node>
    <node id="dynamic_array">
      <data key="d0">132</data>
    </node>
    <node id="array">
      <data key="d0">133</data>
    </node>
    <node id="reservoir_sampling">
      <data key="d0">134</data>
    </node>
    <node id="sampling">
      <data key="d0">135</data>
    </node>
    <node id="storing_indices">
      <data key="d0">136</data>
    </node>
    <node id="list">
      <data key="d0">137</data>
    </node>
    <node id="grid_scanning">
      <data key="d0">138</data>
    </node>
    <node id="grid">
      <data key="d0">139</data>
    </node>
    <node id="frequency">
      <data key="d0">140</data>
    </node>
    <node id="two_pointer_in_place">
      <data key="d0">141</data>
    </node>
    <node id="string_split_and_format_checks">
      <data key="d0">142</data>
    </node>
    <node id="dfs_bfs_rolling_approach">
      <data key="d0">143</data>
    </node>
    <node id="subset_sum_dp">
      <data key="d0">144</data>
    </node>
    <node id="simulation_of_diagonals">
      <data key="d0">145</data>
    </node>
    <node id="prefix_sum_mod_k">
      <data key="d0">146</data>
    </node>
    <node id="prefix_sum">
      <data key="d0">147</data>
    </node>
    <node id="prefix_sum_0_neg1_1_pos1">
      <data key="d0">148</data>
    </node>
    <node id="dfs_bfs_reveal_squares">
      <data key="d0">149</data>
    </node>
    <node id="recursion_with_parentheses_parse">
      <data key="d0">150</data>
    </node>
    <node id="tree_traversal_boundary">
      <data key="d0">151</data>
    </node>
    <node id="permutation_next_greater_logic">
      <data key="d0">152</data>
    </node>
    <node id="permutation">
      <data key="d0">153</data>
    </node>
    <node id="stack_of_function_calls">
      <data key="d0">154</data>
    </node>
    <node id="timestamps">
      <data key="d0">155</data>
    </node>
    <node id="greedy_digit_swap_from_left">
      <data key="d0">156</data>
    </node>
    <node id="dfs_bfs_in_grid">
      <data key="d0">157</data>
    </node>
    <node id="dfs_on_email_lists">
      <data key="d0">158</data>
    </node>
    <node id="stack_approach">
      <data key="d0">159</data>
    </node>
    <node id="monotonic_stack">
      <data key="d0">160</data>
    </node>
    <node id="inorder_traversal_link">
      <data key="d0">161</data>
    </node>
    <node id="shortest_path_with_limited_stops">
      <data key="d0">162</data>
    </node>
    <node id="bellman_ford">
      <data key="d0">163</data>
    </node>
    <node id="custom_priority_sort">
      <data key="d0">164</data>
    </node>
    <node id="linked_list_insertion_logic">
      <data key="d0">165</data>
    </node>
    <node id="two_pointer_on_age_constraints">
      <data key="d0">166</data>
    </node>
    <node id="array_with_front_rear_indices">
      <data key="d0">167</data>
    </node>
    <node id="binary_search_for_peak">
      <data key="d0">168</data>
    </node>
    <node id="bfs_dfs_from_target_node">
      <data key="d0">169</data>
    </node>
    <node id="tree_dfs">
      <data key="d0">170</data>
    </node>
    <node id="depth_tracking">
      <data key="d0">171</data>
    </node>
    <node id="prefix_sums">
      <data key="d0">172</data>
    </node>
    <node id="random_selection">
      <data key="d0">173</data>
    </node>
    <node id="probabilistic_methods">
      <data key="d0">174</data>
    </node>
    <node id="balance_counters">
      <data key="d0">175</data>
    </node>
    <node id="prefix_sum_in_0_1_array">
      <data key="d0">176</data>
    </node>
    <node id="bfs_across_islands">
      <data key="d0">177</data>
    </node>
    <node id="bfs_level_order_checking">
      <data key="d0">178</data>
    </node>
    <node id="dp_with_intervals">
      <data key="d0">179</data>
    </node>
    <node id="merge_intervals_method">
      <data key="d0">180</data>
    </node>
    <node id="count_zero">
      <data key="d0">181</data>
    </node>
    <node id="counting">
      <data key="d0">182</data>
    </node>
    <node id="binary_search_on_capacity">
      <data key="d0">183</data>
    </node>
    <node id="binary_search_using_the_missing_counts">
      <data key="d0">184</data>
    </node>
    <node id="bfs_in_8_directions">
      <data key="d0">185</data>
    </node>
    <node id="stack_based_count">
      <data key="d0">186</data>
    </node>
    <node id="scanning_mismatches">
      <data key="d0">187</data>
    </node>
    <node id="scanning">
      <data key="d0">188</data>
    </node>
    <node id="group_by_i_plus_j_in_a_map">
      <data key="d0">189</data>
    </node>
    <node id="maps">
      <data key="d0">190</data>
    </node>
    <node id="dfs_subtrees_with_apple_check">
      <data key="d0">191</data>
    </node>
    <node id="sparse_representation_iteration">
      <data key="d0">192</data>
    </node>
    <node id="sparse_representation">
      <data key="d0">193</data>
    </node>
    <node id="nodes_have_parent_pointers">
      <data key="d0">194</data>
    </node>
    <node id="scanning_from_the_right">
      <data key="d0">195</data>
    </node>
    <node id="interactive_bfs_dfs_concept">
      <data key="d0">196</data>
    </node>
    <node id="two_pointers_on_runs">
      <data key="d0">197</data>
    </node>
    <node id="sql_grouping_and_joining">
      <data key="d0">198</data>
    </node>
    <node id="sql">
      <data key="d0">199</data>
    </node>
    <node id="database_fundamentals">
      <data key="d0">200</data>
    </node>
    <node id="dp_for_the_fewest_coins">
      <data key="d0">201</data>
    </node>
    <node id="linked_list_rearrangement">
      <data key="d0">202</data>
    </node>
    <node id="implementation_of_standard_sorts">
      <data key="d0">203</data>
    </node>
    <node id="math_formula">
      <data key="d0">204</data>
    </node>
    <node id="dp_on_string_decoding">
      <data key="d0">205</data>
    </node>
    <node id="level_order_bfs_linking">
      <data key="d0">206</data>
    </node>
    <node id="check_single_insert_delete_replace">
      <data key="d0">207</data>
    </node>
    <node id="bst_iteration_with_backtracking">
      <data key="d0">208</data>
    </node>
    <node id="dfs_depth">
      <data key="d0">209</data>
    </node>
    <node id="lca_logic">
      <data key="d0">210</data>
    </node>
    <node id="prefix_sum_map">
      <data key="d0">211</data>
    </node>
    <node id="dp_counting_combos">
      <data key="d0">212</data>
    </node>
    <node id="similar_bfs_with_hidden_adjacency">
      <data key="d0">213</data>
    </node>
    <node id="in_place_pointer_swap">
      <data key="d0">214</data>
    </node>
    <node id="pointer">
      <data key="d0">215</data>
    </node>
    <node id="linked_list_re_linking">
      <data key="d0">216</data>
    </node>
    <node id="linked_list_skip_duplicates">
      <data key="d0">217</data>
    </node>
    <node id="custom_sorting_by_string_comparison">
      <data key="d0">218</data>
    </node>
    <node id="greedy_bfs_layering">
      <data key="d0">219</data>
    </node>
    <node id="bst_node_manipulation">
      <data key="d0">220</data>
    </node>
    <node id="greedy_solution">
      <data key="d0">221</data>
    </node>
    <node id="constraints">
      <data key="d0">222</data>
    </node>
    <node id="binary_search_on_eating_speed">
      <data key="d0">223</data>
    </node>
    <node id="inorder_traversal">
      <data key="d0">224</data>
    </node>
    <node id="bitmask_prefix_approach">
      <data key="d0">225</data>
    </node>
    <node id="scan_for_segments_matching_global_max">
      <data key="d0">226</data>
    </node>
    <node id="convert_times_to_minutes">
      <data key="d0">227</data>
    </node>
    <node id="time_conversion">
      <data key="d0">228</data>
    </node>
    <node id="sort">
      <data key="d0">229</data>
    </node>
    <node id="dp_subset_sum">
      <data key="d0">230</data>
    </node>
    <node id="greedy_for_multiple_transactions">
      <data key="d0">231</data>
    </node>
    <node id="iterative_approach">
      <data key="d0">232</data>
    </node>
    <node id="char_count">
      <data key="d0">233</data>
    </node>
    <node id="character_count">
      <data key="d0">234</data>
    </node>
    <node id="simple_prefix_check_among_strings">
      <data key="d0">235</data>
    </node>
    <node id="binary_search_with_duplicates">
      <data key="d0">236</data>
    </node>
    <node id="dfs_checking_subpath">
      <data key="d0">237</data>
    </node>
    <node id="greedy_with_a_max_heap">
      <data key="d0">238</data>
    </node>
    <node id="sorting_by_freq">
      <data key="d0">239</data>
    </node>
    <node id="bitwise_ops">
      <data key="d0">240</data>
    </node>
    <node id="prefix_sum_remainder_approach">
      <data key="d0">241</data>
    </node>
    <node id="catalan_numbers">
      <data key="d0">242</data>
    </node>
    <node id="greedy_from_largest_roman_values">
      <data key="d0">243</data>
    </node>
    <node id="similar_to_lca_but_confirm_nodes_exist">
      <data key="d0">244</data>
    </node>
    <node id="tree_dfs_cut_approach">
      <data key="d0">245</data>
    </node>
    <node id="hash_mod_frequencies">
      <data key="d0">246</data>
    </node>
    <node id="interval_scheduling">
      <data key="d0">247</data>
    </node>
    <node id="floyds_cycle_detection">
      <data key="d0">248</data>
    </node>
    <node id="cycle_detection">
      <data key="d0">249</data>
    </node>
    <node id="prefix_check">
      <data key="d0">250</data>
    </node>
    <node id="recursive_pattern">
      <data key="d0">251</data>
    </node>
    <node id="sum_approach_minus_min">
      <data key="d0">252</data>
    </node>
    <node id="summation">
      <data key="d0">253</data>
    </node>
    <node id="used_set">
      <data key="d0">254</data>
    </node>
    <node id="min_max_queue">
      <data key="d0">255</data>
    </node>
    <node id="queue">
      <data key="d0">256</data>
    </node>
    <node id="distinct_check">
      <data key="d0">257</data>
    </node>
    <node id="distinctness">
      <data key="d0">258</data>
    </node>
    <node id="binary_search_for_max_length">
      <data key="d0">259</data>
    </node>
    <node id="boyer_moore_for_two_candidates">
      <data key="d0">260</data>
    </node>
    <node id="majority">
      <data key="d0">261</data>
    </node>
    <node id="math_symmetry">
      <data key="d0">262</data>
    </node>
    <node id="dfs_postorder">
      <data key="d0">263</data>
    </node>
    <node id="slow_fast_pointer_find_mid">
      <data key="d0">264</data>
    </node>
    <node id="set_approach_for_squares">
      <data key="d0">265</data>
    </node>
    <node id="greedy_by_end_time">
      <data key="d0">266</data>
    </node>
    <node id="pow2_usage">
      <data key="d0">267</data>
    </node>
    <node id="exponential">
      <data key="d0">268</data>
    </node>
    <node id="bit_manipulation_counting_bits_mod_3">
      <data key="d0">269</data>
    </node>
    <node id="mark_intervals_and_merge">
      <data key="d0">270</data>
    </node>
    <node id="start_top_right_corner">
      <data key="d0">271</data>
    </node>
    <node id="move_left_down">
      <data key="d0">272</data>
    </node>
    <node id="check_flips_to_get_alternating_pattern">
      <data key="d0">273</data>
    </node>
    <node id="string">
      <data key="d0">274</data>
    </node>
    <node id="likely_checking_partial_swaps_or_some_condition">
      <data key="d0">275</data>
    </node>
    <node id="tracking_zero_count">
      <data key="d0">276</data>
    </node>
    <node id="simulation_row_by_row">
      <data key="d0">277</data>
    </node>
    <node id="problem_specific_partial_info">
      <data key="d0">278</data>
    </node>
    <node id="domain_specific">
      <data key="d0">279</data>
    </node>
    <node id="design_with_data_structures">
      <data key="d0">280</data>
    </node>
    <node id="software_engineering">
      <data key="d0">281</data>
    </node>
    <node id="bitwise_or">
      <data key="d0">282</data>
    </node>
    <node id="bst_with_parent_pointer">
      <data key="d0">283</data>
    </node>
    <node id="min_heap_of_seats">
      <data key="d0">284</data>
    </node>
    <node id="two_pointer_from_ends">
      <data key="d0">285</data>
    </node>
    <node id="count">
      <data key="d0">286</data>
    </node>
    <node id="sort_desc_frequency">
      <data key="d0">287</data>
    </node>
    <node id="inorder_flatten">
      <data key="d0">288</data>
    </node>
    <node id="build_balanced">
      <data key="d0">289</data>
    </node>
    <node id="simulation_of_collapses">
      <data key="d0">290</data>
    </node>
    <node id="counting_depth">
      <data key="d0">291</data>
    </node>
    <node id="bfs_level_sums">
      <data key="d0">292</data>
    </node>
    <node id="backtracking_k_combinations">
      <data key="d0">293</data>
    </node>
    <node id="subarray_coverage">
      <data key="d0">294</data>
    </node>
    <node id="kadanes">
      <data key="d0">295</data>
    </node>
    <node id="invert_approach">
      <data key="d0">296</data>
    </node>
    <node id="greedy_track_min_max_open">
      <data key="d0">297</data>
    </node>
    <node id="dfs_from_edges_inward">
      <data key="d0">298</data>
    </node>
    <node id="sql_ranking_or_subquery">
      <data key="d0">299</data>
    </node>
    <node id="recursion_building_symmetrical_pairs">
      <data key="d0">300</data>
    </node>
    <node id="sliding_window_and_a_b_c">
      <data key="d0">301</data>
    </node>
    <node id="string_building_with_known_indices">
      <data key="d0">302</data>
    </node>
    <node id="greedy_sorting_by_cost_difference">
      <data key="d0">303</data>
    </node>
    <node id="double_dfs_approach">
      <data key="d0">304</data>
    </node>
    <node id="map_freq">
      <data key="d0">305</data>
    </node>
    <node id="greedy_alignment_check_of_l_r">
      <data key="d0">306</data>
    </node>
    <node id="counting_depth_from_t">
      <data key="d0">307</data>
    </node>
    <node id="divide_and_conquer">
      <data key="d0">308</data>
    </node>
    <node id="string_hashing">
      <data key="d0">309</data>
    </node>
    <node id="suffix_array_approach">
      <data key="d0">310</data>
    </node>
    <node id="suffix_structures">
      <data key="d0">311</data>
    </node>
    <node id="reservoir_sampling_for_single_item">
      <data key="d0">312</data>
    </node>
    <node id="dp_approach_problem_specific">
      <data key="d0">313</data>
    </node>
    <node id="multiply_device_counts_in_consecutive_non_empty_rows">
      <data key="d0">314</data>
    </node>
    <node id="hardware">
      <data key="d0">315</data>
    </node>
    <node id="dp_counting_squares">
      <data key="d0">316</data>
    </node>
    <node id="prefix_difference">
      <data key="d0">317</data>
    </node>
    <node id="circular_array">
      <data key="d0">318</data>
    </node>
    <node id="interval_booking_check">
      <data key="d0">319</data>
    </node>
    <node id="compare_row_patterns_with_column_patterns">
      <data key="d0">320</data>
    </node>
    <node id="bfs_track_max_in_each_level">
      <data key="d0">321</data>
    </node>
    <node id="diagonal">
      <data key="d0">322</data>
    </node>
    <node id="dp_track_best_ai_plus_i_while_scanning">
      <data key="d0">323</data>
    </node>
    <node id="stack_with_a_min_tracker">
      <data key="d0">324</data>
    </node>
    <node id="dp_with_steps">
      <data key="d0">325</data>
    </node>
    <node id="zero_one_increments">
      <data key="d0">326</data>
    </node>
    <node id="greedy_scanning_of_s_to_build_t">
      <data key="d0">327</data>
    </node>
    <node id="bfs_from_leaves_inward">
      <data key="d0">328</data>
    </node>
    <node id="multi_source_bfs_from_all_zero_cells">
      <data key="d0">329</data>
    </node>
    <node id="vs_suffix_sums">
      <data key="d0">330</data>
    </node>
    <node id="track_positions_of_each_character">
      <data key="d0">331</data>
    </node>
    <node id="freq_compare">
      <data key="d0">332</data>
    </node>
    <node id="prefix_approach_on_shift_ranges">
      <data key="d0">333</data>
    </node>
    <node id="dfs_bfs_from_board_edges">
      <data key="d0">334</data>
    </node>
    <node id="counting_distances">
      <data key="d0">335</data>
    </node>
    <node id="dfs_adjacency">
      <data key="d0">336</data>
    </node>
    <node id="check_leading_bits_of_each_byte">
      <data key="d0">337</data>
    </node>
    <node id="bit_representation">
      <data key="d0">338</data>
    </node>
    <node id="keep_smaller_digits">
      <data key="d0">339</data>
    </node>
    <node id="frequency_requirement_across_b">
      <data key="d0">340</data>
    </node>
    <node id="check_number_of_odd_freq_chars">
      <data key="d0">341</data>
    </node>
    <node id="partial_lock_approach">
      <data key="d0">342</data>
    </node>
    <node id="rolling_hash">
      <data key="d0">343</data>
    </node>
    <node id="count_consecutive_zero_segments">
      <data key="d0">344</data>
    </node>
    <node id="set_based">
      <data key="d0">345</data>
    </node>
    <node id="index_based_counting">
      <data key="d0">346</data>
    </node>
    <node id="hash_points_by_x_or_y">
      <data key="d0">347</data>
    </node>
    <node id="geometry">
      <data key="d0">348</data>
    </node>
    <node id="spiral_fill_with_linked_list">
      <data key="d0">349</data>
    </node>
    <node id="likely_sliding_window">
      <data key="d0">350</data>
    </node>
    <node id="choose_subsequences">
      <data key="d0">351</data>
    </node>
    <node id="linked_list_partial_reverse">
      <data key="d0">352</data>
    </node>
    <node id="delim">
      <data key="d0">353</data>
    </node>
    <node id="length_prefix_approach">
      <data key="d0">354</data>
    </node>
    <node id="prefix">
      <data key="d0">355</data>
    </node>
    <node id="unlimited_usage">
      <data key="d0">356</data>
    </node>
    <node id="row_col_counting_in_a_grid">
      <data key="d0">357</data>
    </node>
    <node id="linked_list_rotate_by_k_steps">
      <data key="d0">358</data>
    </node>
    <node id="dfs_placing_nodes_in_the_correct_position">
      <data key="d0">359</data>
    </node>
    <node id="multi_source_bfs_from_rotten_oranges">
      <data key="d0">360</data>
    </node>
    <node id="greedy_to_form_complete_pairs">
      <data key="d0">361</data>
    </node>
    <node id="likely_dp">
      <data key="d0">362</data>
    </node>
    <node id="dfs_bfs_with_sum_of_fish">
      <data key="d0">363</data>
    </node>
    <node id="use_points_set_to_find_rectangle_corners">
      <data key="d0">364</data>
    </node>
    <node id="union_find_in_a_tree">
      <data key="d0">365</data>
    </node>
    <node id="k_limited_bfs">
      <data key="d0">366</data>
    </node>
    <node id="dfs_track_max_so_far">
      <data key="d0">367</data>
    </node>
    <node id="linked_list_partition_by_x">
      <data key="d0">368</data>
    </node>
    <node id="map_file_contents_list_of_paths">
      <data key="d0">369</data>
    </node>
    <node id="map">
      <data key="d0">370</data>
    </node>
    <node id="binary_search_on_pairs">
      <data key="d0">371</data>
    </node>
    <node id="patience_sorting">
      <data key="d0">372</data>
    </node>
    <node id="bfs_from_the_entrance">
      <data key="d0">373</data>
    </node>
    <node id="dp_with_two_indices">
      <data key="d0">374</data>
    </node>
    <node id="hash_product_list_of_pairs">
      <data key="d0">375</data>
    </node>
    <node id="dp_on_circular_array">
      <data key="d0">376</data>
    </node>
    <node id="map_of_key_list_of_timestamp_value">
      <data key="d0">377</data>
    </node>
    <node id="counting_odd_numbers">
      <data key="d0">378</data>
    </node>
    <node id="map_digit_sum_top_two_values">
      <data key="d0">379</data>
    </node>
    <node id="recursively_with_boundaries">
      <data key="d0">380</data>
    </node>
    <node id="reverse_depth_weighting">
      <data key="d0">381</data>
    </node>
    <node id="problem_specific_possibly_bfs">
      <data key="d0">382</data>
    </node>
    <node id="graph_theory">
      <data key="d0">383</data>
    </node>
    <node id="sql_grouping_or_join">
      <data key="d0">384</data>
    </node>
    <node id="keep_prefix_product">
      <data key="d0">385</data>
    </node>
    <node id="prefix_product">
      <data key="d0">386</data>
    </node>
    <node id="handle_zeros">
      <data key="d0">387</data>
    </node>
    <node id="zero_handling">
      <data key="d0">388</data>
    </node>
    <node id="dfs_from_boundary_to_mark_open_water">
      <data key="d0">389</data>
    </node>
    <node id="graph_traversal">
      <data key="d0">390</data>
    </node>
    <node id="frequency_map">
      <data key="d0">391</data>
    </node>
    <node id="elimination">
      <data key="d0">392</data>
    </node>
    <node id="problem_solving_strategies">
      <data key="d0">393</data>
    </node>
    <node id="verify">
      <data key="d0">394</data>
    </node>
    <node id="verification">
      <data key="d0">395</data>
    </node>
    <node id="bfs_in_lex_order">
      <data key="d0">396</data>
    </node>
    <node id="2d_prefix_sum">
      <data key="d0">397</data>
    </node>
    <node id="only_multiply_non_zero_elements">
      <data key="d0">398</data>
    </node>
    <node id="bfs_for_minimal_steps">
      <data key="d0">399</data>
    </node>
    <node id="recursive_generation_of_bsts">
      <data key="d0">400</data>
    </node>
    <node id="graph_2_coloring">
      <data key="d0">401</data>
    </node>
    <node id="allowing_one_zero_flip">
      <data key="d0">402</data>
    </node>
    <node id="tree_dfs_with_path_constraints">
      <data key="d0">403</data>
    </node>
    <node id="dp_tracking_squares">
      <data key="d0">404</data>
    </node>
    <node id="transform_to_house_robber_on_freq_array">
      <data key="d0">405</data>
    </node>
    <node id="greedy_scheduling_based_on_most_frequent_tasks">
      <data key="d0">406</data>
    </node>
    <node id="prefix_sum_mod_technique">
      <data key="d0">407</data>
    </node>
    <node id="problem_specific_possibly_check_deviation_from_mean">
      <data key="d0">408</data>
    </node>
    <node id="statistical_analysis">
      <data key="d0">409</data>
    </node>
    <node id="prefix_sum_parity_counting">
      <data key="d0">410</data>
    </node>
    <node id="sieve_of_eratosthenes">
      <data key="d0">411</data>
    </node>
    <node id="number_theory">
      <data key="d0">412</data>
    </node>
    <node id="generate_n_by_n_spiral">
      <data key="d0">413</data>
    </node>
    <node id="problem_statement_possibly_direct_formula_for_pattern">
      <data key="d0">414</data>
    </node>
    <node id="pattern_analysis">
      <data key="d0">415</data>
    </node>
    <node id="sieve">
      <data key="d0">416</data>
    </node>
    <node id="linear_scan_for_minimal_gap">
      <data key="d0">417</data>
    </node>
    <node id="greedy_using_last_occurrences">
      <data key="d0">418</data>
    </node>
    <edge source="linkedlist_addition" target="linkedlist" />
    <edge source="linkedlist" target="arrays" />
    <edge source="linkedlist" target="data_structures" />
    <edge source="arrays" target="data_structures" />
    <edge source="data_structures" target="cc" />
    <edge source="carry" target="addition" />
    <edge source="addition" target="mathematics" />
    <edge source="mathematics" target="cc" />
    <edge source="mathematics" target="algorithm_design" />
    <edge source="sliding_window" target="two_pointers" />
    <edge source="sliding_window" target="algorithm_design" />
    <edge source="two_pointers" target="data_structures" />
    <edge source="two_pointers" target="algorithm_design" />
    <edge source="hashing" target="data_structures" />
    <edge source="hashing" target="hashing" />
    <edge source="hashing" target="computer_science_basics" />
    <edge source="hashing" target="algorithm_design" />
    <edge source="computer_science_basics" target="cc" />
    <edge source="expand_around_center" target="strings" />
    <edge source="strings" target="data_structures" />
    <edge source="strings" target="algorithm_design" />
    <edge source="dp" target="dp" />
    <edge source="dp" target="algorithm_design" />
    <edge source="algorithm_design" target="cc" />
    <edge source="math_manipulations" target="mathematics" />
    <edge source="handle_overflow" target="computer_arithmetic" />
    <edge source="computer_arithmetic" target="cc" />
    <edge source="string_parsing" target="strings" />
    <edge source="edge_cases" target="computer_science_basics" />
    <edge source="two_pointer_approach" target="two_pointers" />
    <edge source="sorting" target="data_structures" />
    <edge source="sorting" target="sorting" />
    <edge source="sorting" target="algorithm_design" />
    <edge source="two_pointer" target="two_pointers" />
    <edge source="two_pointer" target="algorithm_design" />
    <edge source="backtracking" target="backtracking" />
    <edge source="backtracking" target="algorithm_design" />
    <edge source="phone_keypad_mapping" target="mappings" />
    <edge source="mappings" target="data_structures" />
    <edge source="fast_slow_pointer" target="algorithm_design" />
    <edge source="backtracking_with_constraints" target="backtracking" />
    <edge source="linked_list_node_swaps" target="linkedlist" />
    <edge source="math" target="mathematics" />
    <edge source="bit_manipulation" target="computer_arithmetic" />
    <edge source="bit_manipulation" target="computer_science_basics" />
    <edge source="permutation_rearrangement" target="algorithm_basics" />
    <edge source="algorithm_basics" target="cc" />
    <edge source="binary_search_variant" target="binary_search" />
    <edge source="binary_search" target="binary_search" />
    <edge source="binary_search" target="algorithm_design" />
    <edge source="binary_search_boundaries" target="binary_search" />
    <edge source="hash_sets_for_row_col_box" target="hash_set" />
    <edge source="hash_set" target="data_structures" />
    <edge source="string_generation_pattern" target="algorithm_basics" />
    <edge source="backtracking_with_sorted_input" target="backtracking" />
    <edge source="string_multiplication_simulation" target="algorithm_basics" />
    <edge source="swapping" target="data_structures" />
    <edge source="matrix_transpose" target="matrix" />
    <edge source="matrix" target="data_structures" />
    <edge source="matrix" target="algorithm_design" />
    <edge source="reverse" target="matrix" />
    <edge source="hashing_by_sorted_key_or_char_count" target="hash_set" />
    <edge source="fast_exponentiation" target="exponentiation" />
    <edge source="exponentiation" target="mathematics" />
    <edge source="kadanes_algorithm" target="dp" />
    <edge source="simulation_of_boundary_loops" target="simulation" />
    <edge source="simulation" target="algorithm_basics" />
    <edge source="simulation" target="algorithm_design" />
    <edge source="greedy_max_reach" target="greedy" />
    <edge source="greedy" target="greedy" />
    <edge source="greedy" target="algorithm_design" />
    <edge source="merging" target="algorithm_basics" />
    <edge source="merging" target="algorithm_design" />
    <edge source="intervals" target="data_structures" />
    <edge source="intervals" target="algorithm_design" />
    <edge source="intervals" target="intervals" />
    <edge source="combinatorics" target="mathematics" />
    <edge source="dp_with_obstacle_handling" target="dp" />
    <edge source="stack_for_directories" target="stack" />
    <edge source="stack" target="stack" />
    <edge source="stack" target="data_structures" />
    <edge source="dp_for_string_transformations" target="dp" />
    <edge source="matrix_marking_approach" target="matrix" />
    <edge source="dutch_national_flag_algorithm" target="algorithm_basics" />
    <edge source="bitmask" target="data_structures" />
    <edge source="bitmask" target="algorithm_design" />
    <edge source="dfs_backtracking_on_board" target="dfs" />
    <edge source="dfs" target="dfs" />
    <edge source="dfs" target="graph_traversal" />
    <edge source="dfs" target="algorithm_design" />
    <edge source="array_manipulation" target="arrays" />
    <edge source="pointer_approach" target="programming_basics" />
    <edge source="programming_basics" target="cc" />
    <edge source="segment_validation" target="data_structures" />
    <edge source="recursion_with_range_bounds" target="recursion" />
    <edge source="recursion" target="cc" />
    <edge source="recursion" target="programming_basics" />
    <edge source="recursion" target="recursion" />
    <edge source="recursion" target="algorithm_design" />
    <edge source="bfs_by_levels" target="bfs" />
    <edge source="bfs" target="bfs" />
    <edge source="bfs" target="graph_theory" />
    <edge source="bfs" target="algorithm_design" />
    <edge source="bfs_with_direction_toggle" target="bfs" />
    <edge source="tree_construction_with_index_lookups" target="tree" />
    <edge source="tree" target="data_structures" />
    <edge source="tree" target="algorithm_design" />
    <edge source="dfs_path_building" target="dfs" />
    <edge source="pointer_re_linking" target="data_structures" />
    <edge source="tree_bfs" target="bfs" />
    <edge source="tree_bfs" target="tree" />
    <edge source="perfect_tree_recursion" target="recursion" />
    <edge source="set" target="set" />
    <edge source="set" target="data_structures" />
    <edge source="union_find" target="union_find" />
    <edge source="union_find" target="data_structures" />
    <edge source="dfs_building_integer" target="dfs" />
    <edge source="palindrome_check" target="data_structures" />
    <edge source="graph_bfs_dfs_cloning" target="graph" />
    <edge source="graph" target="data_structures" />
    <edge source="graph" target="algorithm_design" />
    <edge source="linked_list_mapping" target="linkedlist" />
    <edge source="weaving" target="linkedlist" />
    <edge source="dp_substring_checks" target="dp" />
    <edge source="design_with_doubly_linked_list" target="linkedlist" />
    <edge source="hash" target="hashmap" />
    <edge source="hashmap" target="data_structures" />
    <edge source="hashmap" target="hashmap" />
    <edge source="stack_for_rpn" target="stack" />
    <edge source="dp_tracking_min_max_up_to_current" target="dp" />
    <edge source="binary_search_pivot" target="binary_search" />
    <edge source="string_manipulation" target="strings" />
    <edge source="linear_check" target="computer_science_basics" />
    <edge source="two_pointer_in_sorted_array" target="two_pointers" />
    <edge source="inorder_stack_approach" target="stack" />
    <edge source="reverse_array" target="arrays" />
    <edge source="auxiliary_array" target="arrays" />
    <edge source="dp_on_linear_houses" target="dp" />
    <edge source="dfs_with_right_first" target="dfs" />
    <edge source="dfs_bfs_on_grid" target="dfs" />
    <edge source="graph_cycle_detection" target="graph" />
    <edge source="topological_sort" target="graph" />
    <edge source="sliding_window_and_subarray_sum" target="subarray_sum" />
    <edge source="subarray_sum" target="algorithm_design" />
    <edge source="heap" target="data_structures" />
    <edge source="heap" target="heap" />
    <edge source="quickselect" target="selection" />
    <edge source="selection" target="algorithm_design" />
    <edge source="direct_parse" target="programming_basics" />
    <edge source="bst_property_compare_values" target="tree" />
    <edge source="tree_recursion" target="recursion" />
    <edge source="prefix_suffix_multiplication" target="algorithm_basics" />
    <edge source="hash_pattern_differences" target="hashing" />
    <edge source="min_heap" target="heap" />
    <edge source="timeline_approach" target="timeline" />
    <edge source="timeline" target="algorithm_design" />
    <edge source="multi_source_bfs" target="bfs" />
    <edge source="tree_dfs_for_sum_count" target="dfs" />
    <edge source="bfs_with_column_indices" target="bfs" />
    <edge source="tree_recursion_with_subtree_info" target="recursion" />
    <edge source="greedy_track_two_smallest" target="greedy" />
    <edge source="bfs_of_nested_structure" target="bfs" />
    <edge source="stack_based_flatten" target="stack" />
    <edge source="bucket_sort" target="algorithm_design" />
    <edge source="rows" target="matrix" />
    <edge source="cols" target="matrix" />
    <edge source="diag_counters" target="matrix" />
    <edge source="binary_searching_by_value" target="binary_search" />
    <edge source="dynamic_array" target="array" />
    <edge source="array" target="data_structures" />
    <edge source="array" target="algorithm_design" />
    <edge source="reservoir_sampling" target="sampling" />
    <edge source="sampling" target="algorithm_design" />
    <edge source="storing_indices" target="list" />
    <edge source="list" target="data_structures" />
    <edge source="grid_scanning" target="grid" />
    <edge source="grid" target="data_structures" />
    <edge source="frequency" target="hashmap" />
    <edge source="frequency" target="algorithm_design" />
    <edge source="two_pointer_in_place" target="two_pointers" />
    <edge source="string_split_and_format_checks" target="strings" />
    <edge source="dfs_bfs_rolling_approach" target="dfs" />
    <edge source="subset_sum_dp" target="dp" />
    <edge source="simulation_of_diagonals" target="simulation" />
    <edge source="prefix_sum_mod_k" target="prefix_sum" />
    <edge source="prefix_sum" target="prefix_sum" />
    <edge source="prefix_sum" target="algorithm_design" />
    <edge source="prefix_sum_0_neg1_1_pos1" target="prefix_sum" />
    <edge source="dfs_bfs_reveal_squares" target="dfs" />
    <edge source="recursion_with_parentheses_parse" target="recursion" />
    <edge source="tree_traversal_boundary" target="tree" />
    <edge source="permutation_next_greater_logic" target="permutation" />
    <edge source="permutation" target="algorithm_design" />
    <edge source="stack_of_function_calls" target="stack" />
    <edge source="timestamps" target="computer_science_basics" />
    <edge source="greedy_digit_swap_from_left" target="greedy" />
    <edge source="dfs_bfs_in_grid" target="dfs" />
    <edge source="dfs_on_email_lists" target="dfs" />
    <edge source="stack_approach" target="stack" />
    <edge source="monotonic_stack" target="stack" />
    <edge source="inorder_traversal_link" target="tree" />
    <edge source="shortest_path_with_limited_stops" target="graph" />
    <edge source="bellman_ford" target="graph" />
    <edge source="custom_priority_sort" target="sorting" />
    <edge source="linked_list_insertion_logic" target="linkedlist" />
    <edge source="two_pointer_on_age_constraints" target="two_pointers" />
    <edge source="array_with_front_rear_indices" target="arrays" />
    <edge source="binary_search_for_peak" target="binary_search" />
    <edge source="bfs_dfs_from_target_node" target="bfs" />
    <edge source="tree_dfs" target="dfs" />
    <edge source="depth_tracking" target="tree" />
    <edge source="prefix_sums" target="prefix_sum" />
    <edge source="random_selection" target="probabilistic_methods" />
    <edge source="probabilistic_methods" target="cc" />
    <edge source="balance_counters" target="computer_science_basics" />
    <edge source="prefix_sum_in_0_1_array" target="prefix_sum" />
    <edge source="bfs_across_islands" target="bfs" />
    <edge source="bfs_level_order_checking" target="bfs" />
    <edge source="dp_with_intervals" target="dp" />
    <edge source="merge_intervals_method" target="intervals" />
    <edge source="count_zero" target="counting" />
    <edge source="counting" target="algorithm_design" />
    <edge source="binary_search_on_capacity" target="binary_search" />
    <edge source="binary_search_using_the_missing_counts" target="binary_search" />
    <edge source="bfs_in_8_directions" target="bfs" />
    <edge source="stack_based_count" target="stack" />
    <edge source="scanning_mismatches" target="scanning" />
    <edge source="scanning" target="algorithm_design" />
    <edge source="group_by_i_plus_j_in_a_map" target="maps" />
    <edge source="maps" target="data_structures" />
    <edge source="dfs_subtrees_with_apple_check" target="dfs" />
    <edge source="sparse_representation_iteration" target="sparse_representation" />
    <edge source="sparse_representation" target="data_structures" />
    <edge source="nodes_have_parent_pointers" target="tree" />
    <edge source="scanning_from_the_right" target="scanning" />
    <edge source="interactive_bfs_dfs_concept" target="bfs" />
    <edge source="two_pointers_on_runs" target="two_pointers" />
    <edge source="sql_grouping_and_joining" target="sql" />
    <edge source="sql" target="database_fundamentals" />
    <edge source="database_fundamentals" target="cc" />
    <edge source="dp_for_the_fewest_coins" target="dp" />
    <edge source="linked_list_rearrangement" target="linkedlist" />
    <edge source="implementation_of_standard_sorts" target="sorting" />
    <edge source="math_formula" target="mathematics" />
    <edge source="dp_on_string_decoding" target="dp" />
    <edge source="level_order_bfs_linking" target="tree" />
    <edge source="check_single_insert_delete_replace" target="computer_science_basics" />
    <edge source="bst_iteration_with_backtracking" target="tree" />
    <edge source="dfs_depth" target="dfs" />
    <edge source="lca_logic" target="tree" />
    <edge source="prefix_sum_map" target="prefix_sum" />
    <edge source="dp_counting_combos" target="dp" />
    <edge source="similar_bfs_with_hidden_adjacency" target="bfs" />
    <edge source="in_place_pointer_swap" target="pointer" />
    <edge source="pointer" target="data_structures" />
    <edge source="linked_list_re_linking" target="linkedlist" />
    <edge source="linked_list_skip_duplicates" target="linkedlist" />
    <edge source="custom_sorting_by_string_comparison" target="sorting" />
    <edge source="greedy_bfs_layering" target="greedy" />
    <edge source="bst_node_manipulation" target="tree" />
    <edge source="greedy_solution" target="greedy" />
    <edge source="constraints" target="computer_science_basics" />
    <edge source="binary_search_on_eating_speed" target="binary_search" />
    <edge source="inorder_traversal" target="tree" />
    <edge source="bitmask_prefix_approach" target="bitmask" />
    <edge source="scan_for_segments_matching_global_max" target="scanning" />
    <edge source="convert_times_to_minutes" target="time_conversion" />
    <edge source="time_conversion" target="algorithm_design" />
    <edge source="sort" target="sorting" />
    <edge source="dp_subset_sum" target="dp" />
    <edge source="greedy_for_multiple_transactions" target="greedy" />
    <edge source="iterative_approach" target="computer_science_basics" />
    <edge source="char_count" target="character_count" />
    <edge source="character_count" target="algorithm_design" />
    <edge source="simple_prefix_check_among_strings" target="strings" />
    <edge source="binary_search_with_duplicates" target="binary_search" />
    <edge source="dfs_checking_subpath" target="dfs" />
    <edge source="greedy_with_a_max_heap" target="greedy" />
    <edge source="sorting_by_freq" target="sorting" />
    <edge source="bitwise_ops" target="computer_science_basics" />
    <edge source="prefix_sum_remainder_approach" target="prefix_sum" />
    <edge source="catalan_numbers" target="mathematics" />
    <edge source="greedy_from_largest_roman_values" target="greedy" />
    <edge source="similar_to_lca_but_confirm_nodes_exist" target="tree" />
    <edge source="tree_dfs_cut_approach" target="dfs" />
    <edge source="hash_mod_frequencies" target="hashing" />
    <edge source="interval_scheduling" target="intervals" />
    <edge source="floyds_cycle_detection" target="cycle_detection" />
    <edge source="cycle_detection" target="algorithm_design" />
    <edge source="prefix_check" target="algorithm_design" />
    <edge source="recursive_pattern" target="recursion" />
    <edge source="sum_approach_minus_min" target="summation" />
    <edge source="summation" target="algorithm_design" />
    <edge source="used_set" target="set" />
    <edge source="min_max_queue" target="queue" />
    <edge source="queue" target="algorithm_design" />
    <edge source="distinct_check" target="distinctness" />
    <edge source="distinctness" target="algorithm_design" />
    <edge source="binary_search_for_max_length" target="binary_search" />
    <edge source="boyer_moore_for_two_candidates" target="majority" />
    <edge source="majority" target="algorithm_design" />
    <edge source="math_symmetry" target="mathematics" />
    <edge source="dfs_postorder" target="dfs" />
    <edge source="slow_fast_pointer_find_mid" target="two_pointer" />
    <edge source="set_approach_for_squares" target="set" />
    <edge source="greedy_by_end_time" target="greedy" />
    <edge source="pow2_usage" target="exponential" />
    <edge source="exponential" target="algorithm_design" />
    <edge source="bit_manipulation_counting_bits_mod_3" target="bit_manipulation" />
    <edge source="mark_intervals_and_merge" target="intervals" />
    <edge source="start_top_right_corner" target="matrix" />
    <edge source="move_left_down" target="matrix" />
    <edge source="check_flips_to_get_alternating_pattern" target="string" />
    <edge source="string" target="data_structures" />
    <edge source="string" target="algorithm_design" />
    <edge source="likely_checking_partial_swaps_or_some_condition" target="sorting" />
    <edge source="tracking_zero_count" target="counting" />
    <edge source="simulation_row_by_row" target="simulation" />
    <edge source="problem_specific_partial_info" target="domain_specific" />
    <edge source="domain_specific" target="cc" />
    <edge source="design_with_data_structures" target="software_engineering" />
    <edge source="software_engineering" target="cc" />
    <edge source="bitwise_or" target="computer_science_basics" />
    <edge source="bst_with_parent_pointer" target="tree" />
    <edge source="min_heap_of_seats" target="heap" />
    <edge source="two_pointer_from_ends" target="two_pointers" />
    <edge source="count" target="frequency" />
    <edge source="sort_desc_frequency" target="sorting" />
    <edge source="inorder_flatten" target="tree" />
    <edge source="build_balanced" target="tree" />
    <edge source="simulation_of_collapses" target="simulation" />
    <edge source="counting_depth" target="tree" />
    <edge source="bfs_level_sums" target="bfs" />
    <edge source="backtracking_k_combinations" target="backtracking" />
    <edge source="subarray_coverage" target="algorithm_design" />
    <edge source="kadanes" target="dp" />
    <edge source="invert_approach" target="dp" />
    <edge source="greedy_track_min_max_open" target="greedy" />
    <edge source="dfs_from_edges_inward" target="dfs" />
    <edge source="sql_ranking_or_subquery" target="sql" />
    <edge source="recursion_building_symmetrical_pairs" target="recursion" />
    <edge source="sliding_window_and_a_b_c" target="sliding_window" />
    <edge source="string_building_with_known_indices" target="strings" />
    <edge source="greedy_sorting_by_cost_difference" target="greedy" />
    <edge source="double_dfs_approach" target="dfs" />
    <edge source="map_freq" target="frequency" />
    <edge source="greedy_alignment_check_of_l_r" target="greedy" />
    <edge source="counting_depth_from_t" target="tree" />
    <edge source="divide_and_conquer" target="algorithm_design" />
    <edge source="string_hashing" target="strings" />
    <edge source="suffix_array_approach" target="suffix_structures" />
    <edge source="suffix_structures" target="algorithm_design" />
    <edge source="reservoir_sampling_for_single_item" target="sampling" />
    <edge source="dp_approach_problem_specific" target="dp" />
    <edge source="multiply_device_counts_in_consecutive_non_empty_rows" target="hardware" />
    <edge source="hardware" target="domain_specific" />
    <edge source="dp_counting_squares" target="dp" />
    <edge source="prefix_difference" target="algorithm_design" />
    <edge source="circular_array" target="arrays" />
    <edge source="interval_booking_check" target="intervals" />
    <edge source="compare_row_patterns_with_column_patterns" target="strings" />
    <edge source="bfs_track_max_in_each_level" target="bfs" />
    <edge source="diagonal" target="matrix" />
    <edge source="dp_track_best_ai_plus_i_while_scanning" target="dp" />
    <edge source="stack_with_a_min_tracker" target="stack" />
    <edge source="dp_with_steps" target="dp" />
    <edge source="zero_one_increments" target="computer_science_basics" />
    <edge source="greedy_scanning_of_s_to_build_t" target="greedy" />
    <edge source="bfs_from_leaves_inward" target="bfs" />
    <edge source="multi_source_bfs_from_all_zero_cells" target="bfs" />
    <edge source="vs_suffix_sums" target="array" />
    <edge source="track_positions_of_each_character" target="strings" />
    <edge source="freq_compare" target="frequency" />
    <edge source="prefix_approach_on_shift_ranges" target="prefix_sum" />
    <edge source="dfs_bfs_from_board_edges" target="dfs" />
    <edge source="counting_distances" target="arrays" />
    <edge source="dfs_adjacency" target="dfs" />
    <edge source="check_leading_bits_of_each_byte" target="bit_representation" />
    <edge source="bit_representation" target="computer_science_basics" />
    <edge source="keep_smaller_digits" target="selection" />
    <edge source="frequency_requirement_across_b" target="frequency" />
    <edge source="check_number_of_odd_freq_chars" target="frequency" />
    <edge source="partial_lock_approach" target="computer_science_basics" />
    <edge source="rolling_hash" target="string" />
    <edge source="count_consecutive_zero_segments" target="array" />
    <edge source="set_based" target="set" />
    <edge source="index_based_counting" target="counting" />
    <edge source="hash_points_by_x_or_y" target="geometry" />
    <edge source="geometry" target="algorithm_design" />
    <edge source="spiral_fill_with_linked_list" target="linkedlist" />
    <edge source="likely_sliding_window" target="two_pointers" />
    <edge source="choose_subsequences" target="selection" />
    <edge source="linked_list_partial_reverse" target="linkedlist" />
    <edge source="delim" target="strings" />
    <edge source="length_prefix_approach" target="prefix" />
    <edge source="prefix" target="algorithm_design" />
    <edge source="unlimited_usage" target="domain_specific" />
    <edge source="row_col_counting_in_a_grid" target="matrix" />
    <edge source="linked_list_rotate_by_k_steps" target="linkedlist" />
    <edge source="dfs_placing_nodes_in_the_correct_position" target="dfs" />
    <edge source="multi_source_bfs_from_rotten_oranges" target="bfs" />
    <edge source="greedy_to_form_complete_pairs" target="greedy" />
    <edge source="likely_dp" target="dp" />
    <edge source="dfs_bfs_with_sum_of_fish" target="dfs" />
    <edge source="use_points_set_to_find_rectangle_corners" target="geometry" />
    <edge source="union_find_in_a_tree" target="union_find" />
    <edge source="k_limited_bfs" target="bfs" />
    <edge source="dfs_track_max_so_far" target="dfs" />
    <edge source="linked_list_partition_by_x" target="linkedlist" />
    <edge source="map_file_contents_list_of_paths" target="map" />
    <edge source="map" target="data_structures" />
    <edge source="binary_search_on_pairs" target="binary_search" />
    <edge source="patience_sorting" target="sorting" />
    <edge source="bfs_from_the_entrance" target="bfs" />
    <edge source="dp_with_two_indices" target="dp" />
    <edge source="hash_product_list_of_pairs" target="hashing" />
    <edge source="dp_on_circular_array" target="dp" />
    <edge source="map_of_key_list_of_timestamp_value" target="map" />
    <edge source="counting_odd_numbers" target="counting" />
    <edge source="map_digit_sum_top_two_values" target="mathematics" />
    <edge source="recursively_with_boundaries" target="recursion" />
    <edge source="reverse_depth_weighting" target="tree" />
    <edge source="problem_specific_possibly_bfs" target="bfs" />
    <edge source="graph_theory" target="cc" />
    <edge source="sql_grouping_or_join" target="sql" />
    <edge source="keep_prefix_product" target="prefix_product" />
    <edge source="prefix_product" target="algorithm_design" />
    <edge source="handle_zeros" target="zero_handling" />
    <edge source="zero_handling" target="data_structures" />
    <edge source="dfs_from_boundary_to_mark_open_water" target="dfs" />
    <edge source="graph_traversal" target="cc" />
    <edge source="frequency_map" target="hashmap" />
    <edge source="elimination" target="elimination" />
    <edge source="elimination" target="problem_solving_strategies" />
    <edge source="problem_solving_strategies" target="cc" />
    <edge source="verify" target="verification" />
    <edge source="verification" target="computer_science_basics" />
    <edge source="bfs_in_lex_order" target="bfs" />
    <edge source="2d_prefix_sum" target="prefix_sum" />
    <edge source="only_multiply_non_zero_elements" target="matrix" />
    <edge source="bfs_for_minimal_steps" target="bfs" />
    <edge source="recursive_generation_of_bsts" target="recursion" />
    <edge source="graph_2_coloring" target="graph" />
    <edge source="allowing_one_zero_flip" target="sliding_window" />
    <edge source="tree_dfs_with_path_constraints" target="dfs" />
    <edge source="dp_tracking_squares" target="dp" />
    <edge source="transform_to_house_robber_on_freq_array" target="dp" />
    <edge source="greedy_scheduling_based_on_most_frequent_tasks" target="greedy" />
    <edge source="prefix_sum_mod_technique" target="prefix_sum" />
    <edge source="problem_specific_possibly_check_deviation_from_mean" target="statistical_analysis" />
    <edge source="statistical_analysis" target="domain_specific" />
    <edge source="prefix_sum_parity_counting" target="prefix_sum" />
    <edge source="sieve_of_eratosthenes" target="number_theory" />
    <edge source="number_theory" target="mathematics" />
    <edge source="generate_n_by_n_spiral" target="matrix" />
    <edge source="problem_statement_possibly_direct_formula_for_pattern" target="pattern_analysis" />
    <edge source="pattern_analysis" target="domain_specific" />
    <edge source="sieve" target="number_theory" />
    <edge source="linear_scan_for_minimal_gap" target="algorithm_design" />
    <edge source="greedy_using_last_occurrences" target="greedy" />
  </graph>
</graphml>
